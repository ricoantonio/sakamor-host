{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"firebase/messaging\";\nimport firebase from \"firebase/app\";\nvar firebaseCloudMessaging = {\n  //checking whether token is available in indexed DB\n  tokenInlocalforage: function () {\n    var _tokenInlocalforage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", localStorage.getItem(\"fcm_token\"));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function tokenInlocalforage() {\n      return _tokenInlocalforage.apply(this, arguments);\n    }\n\n    return tokenInlocalforage;\n  }(),\n  userInlocalforage: function () {\n    var _userInlocalforage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", localStorage.getItem(\"user\"));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function userInlocalforage() {\n      return _userInlocalforage.apply(this, arguments);\n    }\n\n    return userInlocalforage;\n  }(),\n  //initializing firebase app\n  init: function () {\n    var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var messaging, tokenInLocalForage, userInlocalforage, _status, fcm_token;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (firebase.apps.length) {\n                _context3.next = 28;\n                break;\n              }\n\n              firebase.initializeApp({\n                apiKey: \"AIzaSyAMTirYpyzY7QWDkzSPsofpo68jaFltnrk\",\n                authDomain: \"sakamor-8f28d.firebaseapp.com\",\n                projectId: \"sakamor-8f28d\",\n                storageBucket: \"sakamor-8f28d.appspot.com\",\n                messagingSenderId: \"400720458166\",\n                appId: \"1:400720458166:web:cf7afc06ec3ac419d69117\"\n              });\n              _context3.prev = 2;\n              messaging = firebase.messaging();\n              _context3.next = 6;\n              return this.tokenInlocalforage();\n\n            case 6:\n              tokenInLocalForage = _context3.sent;\n              _context3.next = 9;\n              return this.userInlocalforage();\n\n            case 9:\n              userInlocalforage = _context3.sent;\n\n              if (!(tokenInLocalForage !== null)) {\n                _context3.next = 12;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", tokenInLocalForage);\n\n            case 12:\n              if (!(userInlocalforage && status && status === \"granted\")) {\n                _context3.next = 22;\n                break;\n              }\n\n              _context3.next = 15;\n              return Notification.requestPermission();\n\n            case 15:\n              _status = _context3.sent;\n              _context3.next = 18;\n              return messaging.getToken();\n\n            case 18:\n              fcm_token = _context3.sent;\n\n              if (!fcm_token) {\n                _context3.next = 22;\n                break;\n              }\n\n              //setting FCM token in indexed db using localforage\n              localStorage.setItem(\"fcm_token\", fcm_token); //return the FCM token after saving it\n\n              return _context3.abrupt(\"return\", fcm_token);\n\n            case 22:\n              _context3.next = 28;\n              break;\n\n            case 24:\n              _context3.prev = 24;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.error(_context3.t0);\n              return _context3.abrupt(\"return\", null);\n\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[2, 24]]);\n    }));\n\n    function init() {\n      return _init.apply(this, arguments);\n    }\n\n    return init;\n  }()\n};\nexport { firebaseCloudMessaging };","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/webPush.js"],"names":["firebase","firebaseCloudMessaging","tokenInlocalforage","localStorage","getItem","userInlocalforage","init","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","messaging","tokenInLocalForage","status","Notification","requestPermission","getToken","fcm_token","setItem","console","error"],"mappings":";;AAAA,OAAO,oBAAP;AACA,OAAOA,QAAP,MAAqB,cAArB;AAEA,IAAMC,sBAAsB,GAAG;AAC7B;AACAC,EAAAA,kBAAkB;AAAA,uFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+CACXC,YAAY,CAACC,OAAb,CAAqB,WAArB,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAFW;AAM7BC,EAAAA,iBAAiB;AAAA,sFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,gDACVF,YAAY,CAACC,OAAb,CAAqB,MAArB,CADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KANY;AAU7B;AACAE,EAAAA,IAAI;AAAA,yEAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACCN,QAAQ,CAACO,IAAT,CAAcC,MADf;AAAA;AAAA;AAAA;;AAEFR,cAAAA,QAAQ,CAACS,aAAT,CAAuB;AACrBC,gBAAAA,MAAM,EAAE,yCADa;AAErBC,gBAAAA,UAAU,EAAE,+BAFS;AAGrBC,gBAAAA,SAAS,EAAE,eAHU;AAIrBC,gBAAAA,aAAa,EAAE,2BAJM;AAKrBC,gBAAAA,iBAAiB,EAAE,cALE;AAMrBC,gBAAAA,KAAK,EAAE;AANc,eAAvB;AAFE;AAYMC,cAAAA,SAZN,GAYkBhB,QAAQ,CAACgB,SAAT,EAZlB;AAAA;AAAA,qBAaiC,KAAKd,kBAAL,EAbjC;;AAAA;AAaMe,cAAAA,kBAbN;AAAA;AAAA,qBAcgC,KAAKZ,iBAAL,EAdhC;;AAAA;AAcMA,cAAAA,iBAdN;;AAAA,oBAiBIY,kBAAkB,KAAK,IAjB3B;AAAA;AAAA;AAAA;;AAAA,gDAkBSA,kBAlBT;;AAAA;AAAA,oBAsBIZ,iBAAiB,IAAIa,MAArB,IAA+BA,MAAM,KAAK,SAtB9C;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAuBuBC,YAAY,CAACC,iBAAb,EAvBvB;;AAAA;AAuBQF,cAAAA,OAvBR;AAAA;AAAA,qBAyB0BF,SAAS,CAACK,QAAV,EAzB1B;;AAAA;AAyBQC,cAAAA,SAzBR;;AAAA,mBA0BMA,SA1BN;AAAA;AAAA;AAAA;;AA2BI;AACAnB,cAAAA,YAAY,CAACoB,OAAb,CAAqB,WAArB,EAAkCD,SAAlC,EA5BJ,CA6BI;;AA7BJ,gDA8BWA,SA9BX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkCAE,cAAAA,OAAO,CAACC,KAAR;AAlCA,gDAmCO,IAnCP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAXyB,CAA/B;AAmDA,SAASxB,sBAAT","sourcesContent":["import \"firebase/messaging\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst firebaseCloudMessaging = {\r\n  //checking whether token is available in indexed DB\r\n  tokenInlocalforage: async () => {\r\n    return localStorage.getItem(\"fcm_token\");\r\n  },\r\n\r\n  userInlocalforage: async () => {\r\n    return localStorage.getItem(\"user\");\r\n  },\r\n\r\n  //initializing firebase app\r\n  init: async function () {\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp({\r\n        apiKey: \"AIzaSyAMTirYpyzY7QWDkzSPsofpo68jaFltnrk\",\r\n        authDomain: \"sakamor-8f28d.firebaseapp.com\",\r\n        projectId: \"sakamor-8f28d\",\r\n        storageBucket: \"sakamor-8f28d.appspot.com\",\r\n        messagingSenderId: \"400720458166\",\r\n        appId: \"1:400720458166:web:cf7afc06ec3ac419d69117\",\r\n      });\r\n\r\n      try {\r\n        const messaging = firebase.messaging();\r\n        const tokenInLocalForage = await this.tokenInlocalforage();\r\n        const userInlocalforage = await this.userInlocalforage();\r\n\r\n        //if FCM token is already there just return the token\r\n        if (tokenInLocalForage !== null) {\r\n          return tokenInLocalForage;\r\n        }\r\n\r\n        //requesting notification permission from browser\r\n        if (userInlocalforage && status && status === \"granted\") {\r\n          const status = await Notification.requestPermission();\r\n          //getting token from FCM\r\n          const fcm_token = await messaging.getToken();\r\n          if (fcm_token) {\r\n            //setting FCM token in indexed db using localforage\r\n            localStorage.setItem(\"fcm_token\", fcm_token);\r\n            //return the FCM token after saving it\r\n            return fcm_token;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n      }\r\n    }\r\n  },\r\n};\r\nexport { firebaseCloudMessaging };\r\n"]},"metadata":{},"sourceType":"module"}
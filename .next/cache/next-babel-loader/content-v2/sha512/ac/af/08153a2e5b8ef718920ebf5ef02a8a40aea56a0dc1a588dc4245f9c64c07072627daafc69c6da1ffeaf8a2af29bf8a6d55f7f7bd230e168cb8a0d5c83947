{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Router, { useRouter } from \"next/router\";\nimport styles from \"../styles/pages/VisitPlanDetail.module.css\";\nimport { Stores } from \"../store\";\nimport Nav from \"./Nav\";\nimport Spinner from \"./Spinner\";\nimport Button from \"./Button\";\nimport Card from \"./Card\";\nimport { getInvoiceData, getInvoiceDataUnplan, getPlanId, getPlanMonthlyHistory, getProductSearch, getProductByJenisChannel, getProductAvgSales, getInvoiceDataSpreading } from \"../helper\";\nexport default function Avability({\n  type\n}) {\n  const {\n    state,\n    dispatch,\n    actions\n  } = useContext(Stores);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: renderProductList,\n    1: setRenderProductList\n  } = useState(false);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: searchListProduct,\n    1: setSearchListProduct\n  } = useState(\"\");\n  const {\n    0: product,\n    1: setProduct\n  } = useState([]);\n  const {\n    0: productFocus,\n    1: setProductFocus\n  } = useState({});\n  const {\n    0: avabilityList,\n    1: setAvabilityList\n  } = useState([]);\n  const {\n    0: order,\n    1: setOrder\n  } = useState(\"\");\n  const {\n    0: pengiriman,\n    1: setPengiriman\n  } = useState(\"\");\n  const {\n    0: avgSales,\n    1: setAvgSales\n  } = useState(\"\");\n  const {\n    0: harga,\n    1: setHarga\n  } = useState(\"\");\n  const {\n    0: saranOrder,\n    1: setSaranOrder\n  } = useState(\"\");\n  const {\n    0: stock,\n    1: setStock\n  } = useState(\"\");\n  const {\n    0: minor,\n    1: setMinor\n  } = useState(\"\");\n  const {\n    0: ket,\n    1: setKet\n  } = useState(\"\");\n  const {\n    0: plan,\n    1: setPlan\n  } = useState([]);\n  const {\n    0: newNOO,\n    1: setNewNOO\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    if (type !== \"HISTORY\") {\n      const notEmpty = avabilityList.length > 0;\n\n      if (notEmpty > 0) {\n        window.onbeforeunload = () => {\n          return \"Data will be lost if you leave the page, are you sure?\";\n        };\n      }\n    }\n  });\n  useEffect(() => {\n    if (type === \"PLAN\") {\n      if (state.visitPlanReducer.avability.length > 0) {\n        setAvabilityList([...state.visitPlanReducer.avability]);\n      }\n    } else if (type === \"UNPLAN\") {\n      if (state.visitUnplanReducer.avability.length > 0) {\n        setAvabilityList([...state.visitUnplanReducer.avability]);\n      }\n    } else if (type === \"SPREADING\") {\n      if (state.visitSpreadingReducer.avability.length > 0) {\n        setAvabilityList([...state.visitSpreadingReducer.avability]);\n      }\n    }\n  }, [dispatch]);\n  useEffect(() => {}, []);\n  useEffect(() => {\n    if (router.query.new) {\n      setNewNOO(true);\n    } else {\n      if (type === \"UNPLAN\") {\n        if (state.visitUnplanReducer.jenisChannel.namaJenisChannel && state.visitUnplanReducer.outlet.namaOutlet) {} else {\n          Router.push(\"/visit/unplan\");\n        }\n      } else if (type === \"SPREADING\") {\n        if (state.visitSpreadingReducer.jenisChannel.namaJenisChannel && state.visitSpreadingReducer.outlet.namaOutlet) {} else {\n          Router.push(\"/visit/spreading\");\n        }\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (productFocus.produkID) {\n      if (type === \"PLAN\") {\n        setAvgSales(10);\n        setHarga(5000);\n      } else if (type === \"UNPLAN\") {\n        setAvgSales(10);\n        setHarga(5000); // getProductAvgSales(\n        //   productFocus.produkID,\n        //   state.visitUnplanReducer.outlet.outletID\n        // )\n        //   .then((data) => {\n        //     console.log(data);\n        //   })\n        //   .catch((err) => {\n        //     console.log(err);\n        //   });\n      } else if (type === \"SPREADING\") {\n        setAvgSales(10);\n        setHarga(5000);\n      }\n    }\n  }, [productFocus]);\n  useEffect(() => {\n    if (productFocus.produkID) {\n      if (stock) {\n        if (type === \"PLAN\") {\n          if (parseInt(avgSales) > parseInt(stock)) {\n            setSaranOrder(parseInt(avgSales) - parseInt(stock));\n            setKet(\"Understock\");\n          } else {\n            setSaranOrder(0);\n            setKet(\"Overstock\");\n          }\n        } else if (type === \"UNPLAN\") {\n          if (parseInt(avgSales) > parseInt(stock)) {\n            setSaranOrder(parseInt(avgSales) - parseInt(stock));\n            setKet(\"Understock\");\n          } else {\n            setSaranOrder(0);\n            setKet(\"Overstock\");\n          }\n        } else if (type === \"SPREADING\") {\n          if (parseInt(avgSales) > parseInt(stock)) {\n            setSaranOrder(parseInt(avgSales) - parseInt(stock));\n            setKet(\"Understock\");\n          } else {\n            setSaranOrder(0);\n            setKet(\"Overstock\");\n          }\n        }\n      }\n    }\n  }, [stock]);\n  useEffect(() => {\n    if (router.query.id) {\n      if (type === \"PLAN\") {\n        getPlanId(router.query.id).then(({\n          samePlan,\n          data\n        }) => {\n          // console.log(samePlan, data);\n          if (samePlan.length == 0) {\n            Router.push(\"/visit/plan\");\n          } else {\n            setPlan(data); // console.log(data);\n\n            if (!state.visitPlanReducer.checkIn) {\n              actions.setPlanCheckIn(now);\n            }\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else if (type === \"UNPLAN\") {} else if (type === \"SPREADING\") {} else if (type === \"HISTORY_PLAN\") {\n        getInvoiceData(router.query.id).then(data => {\n          setAvabilityList(data);\n          setLoading(false);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else if (type === \"HISTORY_UNPLAN\") {\n        getInvoiceDataUnplan(router.query.id).then(data => {\n          setAvabilityList(data);\n          setLoading(false);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else if (type === \"HISTORY_SPREADING\") {\n        getInvoiceDataSpreading(router.query.id).then(data => {\n          setAvabilityList(data);\n          setLoading(false);\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n  }, [router.query.id]);\n  useEffect(() => {\n    if (type === \"PLAN\") {\n      getProductByJenisChannel(plan.idJenisChannel).then(data => {\n        setProduct(data); // console.log(data);\n\n        setLoading(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (type === \"UNPLAN\") {\n      getProductByJenisChannel(state.visitUnplanReducer.jenisChannel.jenisChannelID).then(data => {\n        setProduct(data); // console.log(data);\n\n        setLoading(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (type === \"SPREADING\") {\n      getProductByJenisChannel(state.visitSpreadingReducer.jenisChannel.jenisChannelID).then(data => {\n        setProduct(data); // console.log(data);\n\n        setLoading(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [plan]);\n\n  const onSearchProduct = search => {\n    // setProductFocus(search);\n    // getProductSearch(search)\n    //   .then((data) => {\n    //     setProduct(data);\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });;''''\n    // setProductSearch(search);\n    setSearchListProduct(search);\n  };\n\n  const renderProductSearch = () => {\n    const render = product.map((val, index) => {\n      if (val.namaProduk.includes(searchListProduct.toUpperCase())) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          onClick: () => {\n            // setProduct([]);\n            console.log(val);\n            setProductFocus(val);\n            setSearchListProduct(val.namaProduk);\n            setRenderProductList(false);\n          },\n          style: {\n            borderBottom: \".5px solid #f0f0f0\",\n            width: \"356px\"\n          },\n          children: val.namaProduk\n        }, index);\n      }\n    });\n    return render;\n  };\n\n  const renderModalAdd = () => {\n    if (modal) {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.modal_avability,\n          onClick: () => {\n            setModal(false);\n          }\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.wrapper,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.avability_modal_container,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.add_title,\n              children: \"Add Product\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.avability_modal_subtitle,\n              children: \"Product\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onChange: e => {\n                onSearchProduct(e.target.value);\n              },\n              placeholder: \"Search\",\n              value: searchListProduct,\n              className: styles.input_order_search // onClick={() => {\n              //   setProduct([]);\n              // }}\n              ,\n              onFocus: () => setRenderProductList(true)\n            }), renderProductList ? /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                position: \"absolute\",\n                maxHeight: \"180px\",\n                backgroundColor: \"white\",\n                overflowY: \"scroll\",\n                maxWidth: \"400px\",\n                padding: \"0 4px\",\n                zIndex: 999999\n              },\n              children: renderProductSearch()\n            }) : null, /*#__PURE__*/_jsx(\"div\", {\n              className: styles.avability_modal_subtitle,\n              children: \"Stock (pcs)\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onChange: e => {\n                setStock(e.target.value);\n              },\n              placeholder: \"0\",\n              type: \"number\",\n              min: 0,\n              className: styles.input_order,\n              value: stock\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.avg_sales_container,\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                style: {\n                  paddingRight: \"5px\"\n                },\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.avability_modal_subtitle,\n                  children: \"Avg Sales (pcs)\"\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  onChange: e => {\n                    setAvgSales(e.target.value);\n                  },\n                  placeholder: \"0\",\n                  type: \"number\",\n                  min: 0,\n                  className: styles.input_order,\n                  value: avgSales,\n                  disabled: true\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                style: {\n                  paddingLeft: \"5px\"\n                },\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.avability_modal_subtitle,\n                  children: \"Saran Order (pcs)\"\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  onChange: e => {\n                    setSaranOrder(e.target.value);\n                  },\n                  placeholder: \"0\",\n                  type: \"number\",\n                  min: 0,\n                  className: styles.input_order,\n                  value: saranOrder,\n                  disabled: true\n                })]\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.avability_modal_subtitle,\n              children: \"Order (pcs)\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              onChange: e => {\n                setOrder(e.target.value);\n              },\n              placeholder: \"0\",\n              type: \"number\",\n              min: 0,\n              className: styles.input_order,\n              value: order\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.avability_modal_subtitle,\n              children: \"Keterangan\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                height: \"24px\"\n              },\n              children: ket\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                marginTop: \"20px\"\n              },\n              children: /*#__PURE__*/_jsx(Button, {\n                text: \"Add\",\n                onClick: () => {\n                  var reg = new RegExp(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/g);\n\n                  if (productFocus.namaProduk && order.match(reg) && order != 0) {\n                    if (avabilityList.length > 0) {\n                      var sameDataIndex = avabilityList.findIndex(val => val.productFocus.namaProduk === productFocus.namaProduk);\n\n                      if (sameDataIndex + 1) {\n                        avabilityList.splice(sameDataIndex, 1);\n                        avabilityList.push({\n                          productFocus,\n                          stock,\n                          saranOrder,\n                          order,\n                          ket,\n                          pengiriman,\n                          minor,\n                          harga\n                        });\n                        setModal(false);\n                        setStock(\"\");\n                        setSaranOrder(\"\");\n                        setOrder(\"\");\n                        setKet(\"\");\n                        setHarga(\"\");\n                      } else {\n                        avabilityList.push({\n                          productFocus,\n                          stock,\n                          saranOrder,\n                          order,\n                          ket,\n                          pengiriman,\n                          minor,\n                          harga\n                        });\n                        setModal(false);\n                        setStock(\"\");\n                        setSaranOrder(\"\");\n                        setOrder(\"\");\n                        setKet(\"\");\n                        setHarga(\"\");\n                      }\n                    } else {\n                      avabilityList.push({\n                        productFocus,\n                        stock,\n                        saranOrder,\n                        order,\n                        ket,\n                        pengiriman,\n                        minor,\n                        harga\n                      });\n                      setModal(false);\n                      setStock(\"\");\n                      setSaranOrder(\"\");\n                      setOrder(\"\");\n                      setKet(\"\");\n                      setHarga(\"\");\n                    }\n                  }\n                }\n              })\n            })]\n          })\n        })]\n      });\n    }\n  };\n\n  const renderAvabilityList = () => {\n    if (type.includes(\"HISTORY\")) {\n      // console.log(avabilityList);\n      avabilityList.sort((a, b) => a.namaProduk.localeCompare(b.namaProduk));\n      const filterData = avabilityList.filter(val => {\n        return val.namaProduk.toLowerCase().includes(search.toLowerCase());\n      });\n      const render = filterData.map((val, index) => {\n        return /*#__PURE__*/_jsx(Card, {\n          style: {\n            borderRadius: \"5px\",\n            padding: \"30px\",\n            marginTop: \"14px\"\n          },\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.avabilitylist_title,\n              children: val.namaProduk\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.avabilitylist_container,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.avabilitylist_subtitle,\n                children: \"Order\"\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.avabilitylist_value,\n                children: [val.jumlah, \" pcs\"]\n              })]\n            }), val.keterangan ? /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.avabilitylist_container,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.avabilitylist_subtitle,\n                children: \"Keterangan\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.avabilitylist_value,\n                children: val.keterangan\n              })]\n            }) : null]\n          })\n        }, index);\n      });\n\n      if (filterData.length == 0) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            textAlign: \"center\",\n            marginTop: \"150px\",\n            color: \"#d0d0d0\"\n          },\n          children: \"No Item\"\n        });\n      } else {\n        return render;\n      }\n    } else {\n      avabilityList.sort((a, b) => a.productFocus.namaProduk.localeCompare(b.productFocus.namaProduk));\n      const filterData = avabilityList.filter(val => {\n        return val.productFocus.namaProduk.toLowerCase().includes(search.toLowerCase());\n      });\n      const render = filterData.map((val, index) => {\n        return /*#__PURE__*/_jsx(Card, {\n          style: {\n            borderRadius: \"5px\",\n            padding: \"30px\",\n            marginTop: \"14px\"\n          },\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            onClick: () => {\n              setProductFocus(val.productFocus);\n              setStock(val.stock);\n              setSaranOrder(val.saranOrder);\n              setOrder(val.order);\n              setKet(val.ket);\n              setModal(true);\n              setPengiriman(val.pengiriman);\n              setMinor(val.minor);\n              setHarga(val.harga);\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.avabilitylist_title,\n              children: val.productFocus.namaProduk\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.avabilitylist_stock_container,\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: styles.avabilitylist_container,\n                style: {\n                  marginRight: \"5px\"\n                },\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.avabilitylist_subtitle,\n                  children: \"Stock\"\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  div: true,\n                  className: styles.avabilitylist_value,\n                  children: [val.stock, \" pcs\"]\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.avabilitylist_container,\n                style: {\n                  marginLeft: \"5px\"\n                },\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.avabilitylist_subtitle,\n                  children: \"Saran Order\"\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  div: true,\n                  className: styles.avabilitylist_value,\n                  children: [val.saranOrder, \" pcs\"]\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.avabilitylist_container,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.avabilitylist_subtitle,\n                children: \"Order\"\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.avabilitylist_value,\n                children: [val.order, \" pcs\"]\n              })]\n            }), val.ket ? /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.avabilitylist_container,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.avabilitylist_subtitle,\n                children: \"Keterangan\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.avabilitylist_value,\n                children: val.ket\n              })]\n            }) : null]\n          })\n        }, index);\n      });\n\n      if (filterData.length == 0) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            textAlign: \"center\",\n            marginTop: \"150px\",\n            color: \"#d0d0d0\"\n          },\n          children: \"No Item\"\n        });\n      } else {\n        return render;\n      }\n    }\n  };\n\n  const onSave = () => {\n    if (newNOO) {\n      actions.setSpreadingAvability(avabilityList);\n      Router.push(`/visit/spreading/submit?new=true`);\n    } else {\n      if (type === \"PLAN\") {\n        actions.setPlanAvability(avabilityList); // console.log(avabilityList);\n\n        Router.push(`/visit/plan/${router.query.id}`);\n      } else if (type === \"UNPLAN\") {\n        actions.setUnplanAvability(avabilityList);\n        Router.push(`/visit/unplan/submit`);\n      } else if (type === \"SPREADING\") {\n        actions.setSpreadingAvability(avabilityList);\n        Router.push(`/visit/spreading/submit`);\n      }\n    }\n  };\n\n  const render = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsx(Spinner, {});\n    } else {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [renderModalAdd(), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.container,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.wrapper,\n            children: [type.includes(\"HISTORY\") ? /*#__PURE__*/_jsx(Nav, {\n              title: \"Avability\",\n              color: \"white\",\n              backAction: () => {\n                Router.back();\n              }\n            }) : /*#__PURE__*/_jsx(Nav, {\n              title: \"Avability\",\n              color: \"white\",\n              action: \"Save\",\n              onClick: () => {\n                onSave();\n              },\n              backAction: () => {\n                Router.back();\n              },\n              disable: false\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.main,\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: styles.search_fixed,\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  style: {\n                    margin: \"10px 0 0 0\"\n                  },\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    className: styles.progress_bar\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: styles.progress_bar_now,\n                    style: {\n                      width: `${avabilityList.length / 25 * 100}%`\n                    }\n                  })]\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  onChange: e => {\n                    setSearch(e.target.value);\n                  },\n                  placeholder: \"Search\",\n                  className: styles.input,\n                  style: {\n                    marginTop: \"0\"\n                  }\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                style: {\n                  paddingTop: \"60px\"\n                },\n                children: [renderAvabilityList(), /*#__PURE__*/_jsx(\"div\", {\n                  style: {\n                    marginBottom: \"100px\"\n                  }\n                })]\n              })]\n            }), type.includes(\"HISTORY\") ? null : /*#__PURE__*/_jsx(\"div\", {\n              className: styles.avability_bot_container,\n              children: /*#__PURE__*/_jsx(Button, {\n                text: \"Add\",\n                onClick: () => {\n                  setModal(true); // setProduct([]);\n\n                  setProductFocus(\"\");\n                  setAvgSales(\"\");\n                  setStock(\"\");\n                  setPengiriman(\"\");\n                  setOrder(\"\");\n                  setSaranOrder(\"\");\n                  setKet(\"\");\n                  setMinor(\"\");\n                  setHarga(\"\");\n                  setSearchListProduct(\"\");\n                }\n              })\n            })]\n          })\n        })]\n      });\n    }\n  };\n\n  return render();\n}","map":null,"metadata":{},"sourceType":"module"}
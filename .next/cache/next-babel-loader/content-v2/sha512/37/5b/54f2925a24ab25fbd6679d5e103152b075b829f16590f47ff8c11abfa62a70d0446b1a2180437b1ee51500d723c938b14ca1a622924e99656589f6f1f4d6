{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Router, { useRouter } from \"next/router\";\nimport styles from \"../styles/pages/VisitPlanDetail.module.css\";\nimport { Stores } from \"../store\";\nimport Nav from \"./Nav\";\nimport Spinner from \"./Spinner\";\nimport Modal from \"./Modal\";\nimport Dropdown from \"./Dropdown\";\nimport { getPosm, getPlanId, getInvoiceDataPosm, viewFile, getInvoiceDataPosmUnplan, viewFileUnplan, getInvoiceDataPosmSpreading, viewFileSpreading, getBrand } from \"../helper\";\nimport Card from \"./Card\";\nexport default function Visibility({\n  type\n}) {\n  const {\n    state,\n    dispatch,\n    actions\n  } = useContext(Stores);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: loadingBrand,\n    1: setLoadingBrand\n  } = useState(true);\n  const {\n    0: loadingView,\n    1: setLoadingView\n  } = useState(true);\n  const {\n    0: posm,\n    1: setPosm\n  } = useState([]);\n  const {\n    0: brand,\n    1: setBrand\n  } = useState([]);\n  const {\n    0: posmList,\n    1: setPosmList\n  } = useState([]);\n  const {\n    0: plan,\n    1: setPlan\n  } = useState([]);\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: fileFocus,\n    1: setFileFocus\n  } = useState(null);\n  const {\n    0: dummy,\n    1: setDummy\n  } = useState(0);\n  const {\n    0: newNOO,\n    1: setNewNOO\n  } = useState(false);\n  const {\n    0: vis,\n    1: setVis\n  } = useState([{\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }]);\n  const router = useRouter();\n  const initialVis = [{\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }, {\n    file: null,\n    type: null,\n    brand: null\n  }];\n  useEffect(() => {\n    const notEmpty = vis.filter(val => {\n      return val.file !== null && val.type !== null;\n    }); // console.log(notEmpty);\n\n    if (notEmpty.length > 0) {\n      window.onbeforeunload = function () {\n        return \"Data will be lost if you leave the page, are you sure?\";\n      };\n    }\n  });\n  useEffect(() => {\n    if (type === \"PLAN\") {\n      if (state.visitPlanReducer.visibility.length > 0) {\n        setVis([...state.visitPlanReducer.visibility]);\n      }\n    } else if (type === \"UNPLAN\") {\n      if (state.visitUnplanReducer.visibility.length > 0) {\n        setVis([...state.visitUnplanReducer.visibility]);\n      }\n    } else if (type === \"SPREADING\") {\n      if (state.visitSpreadingReducer.visibility.length > 0) {\n        setVis([...state.visitSpreadingReducer.visibility]);\n      }\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    if (router.query.new) {\n      setNewNOO(true);\n    } else {\n      if (type === \"UNPLAN\") {\n        if (state.visitUnplanReducer.jenisChannel.namaJenisChannel && state.visitUnplanReducer.outlet.namaOutlet) {} else {\n          Router.push(\"/visit/unplan\");\n        }\n      } else if (type === \"SPREADING\") {\n        if (state.visitSpreadingReducer.jenisChannel.namaJenisChannel && state.visitSpreadingReducer.outlet.namaOutlet) {} else {\n          Router.push(\"/visit/spreading?new=true\");\n        }\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (router.query.id) {\n      if (type === \"PLAN\") {\n        getPlanId(router.query.id).then(({\n          samePlan,\n          data\n        }) => {\n          // console.log(samePlan, data);\n          if (samePlan.length == 0) {\n            Router.push(\"/visit/plan\");\n          } else {\n            setPlan(data);\n            setLoading(false);\n\n            if (!state.visitPlanReducer.checkIn) {\n              actions.setPlanCheckIn(now);\n            }\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else if (type === \"UNPLAN\") {} else if (type === \"SPREADING\") {} else if (type === \"HISTORY_PLAN\") {\n        getInvoiceDataPosm(router.query.id).then(data => {\n          setPosmList(data);\n          console.log(data);\n          setLoading(false);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else if (type === \"HISTORY_UNPLAN\") {\n        getInvoiceDataPosmUnplan(router.query.id).then(data => {\n          setPosmList(data);\n          console.log(data);\n          setLoading(false);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else if (type === \"HISTORY_SPREADING\") {\n        getInvoiceDataPosmSpreading(router.query.id).then(data => {\n          setPosmList(data);\n          setLoading(false);\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n  }, [router.query.id]);\n  useEffect(() => {\n    getPosm().then(data => {\n      setPosm(data);\n      setLoading(false); // console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n    getBrand().then(data => {\n      setBrand(data);\n      setLoadingBrand(false); // console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [dispatch]);\n\n  const onFileFocus = val => {\n    setModal(true);\n    setLoadingView(true);\n\n    if (type === \"HISTORY_PLAN\") {\n      viewFile(val.id).then(data => {\n        setFileFocus(data);\n        setLoadingView(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (type === \"HISTORY_UNPLAN\") {\n      viewFileUnplan(val.id).then(data => {\n        setFileFocus(data);\n        setLoadingView(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (type === \"HISTORY_SPREADING\") {\n      viewFileSpreading(val.id).then(data => {\n        setFileFocus(data);\n        setLoadingView(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const renderInputUpload = () => {\n    var render = vis.map((val, index) => {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            fontSize: \"12px\",\n            color: \"#b9b9c3\"\n          },\n          children: [\"POSM \", index + 1]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.visibility_grid,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.visibility_dropdown,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.grid_50,\n              children: [/*#__PURE__*/_jsx(Dropdown, {\n                options: posm,\n                type: \"POSM\",\n                onChange: e => {\n                  var data = posm.filter(val => {\n                    return val.program == e.target.value;\n                  });\n                  vis.splice(index, 1, _objectSpread(_objectSpread({}, vis[index]), {}, {\n                    type: data[0]\n                  }));\n                  setDummy(dummy + 1);\n                },\n                value: val.type != null ? val.type.program : \"\"\n              }), /*#__PURE__*/_jsx(Dropdown, {\n                options: brand,\n                type: \"BRAND\",\n                onChange: e => {\n                  var data = brand.filter(val => {\n                    return val.namaBrand == e.target.value;\n                  });\n                  vis.splice(index, 1, _objectSpread(_objectSpread({}, vis[index]), {}, {\n                    brand: data[0]\n                  }));\n                  setDummy(dummy + 1);\n                },\n                value: val.brand != null ? val.brand.namaBrand : \"\"\n              })]\n            }), /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                fontSize: \"10px\",\n                color: \"#41867A\",\n                fontWeight: \"500\"\n              },\n              children: val.file != null ? val.file.name : null\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsxs(\"label\", {\n              className: styles.new_button,\n              htmlFor: `upload${index}`,\n              children: [/*#__PURE__*/_jsx(\"img\", {\n                src: \"/camera.svg\",\n                style: {\n                  width: \"18px\",\n                  verticalAlign: \"baseline\"\n                }\n              }), /*#__PURE__*/_jsx(\"input\", {\n                className: styles.input_file,\n                onChange: e => {\n                  // let reader = new FileReader();\n                  // reader.readAsDataURL(e.target.files[0]);\n                  // reader.onload = () => {\n                  //   console.log(reader.result);\n                  // };\n                  vis.splice(index, 1, _objectSpread(_objectSpread({}, vis[index]), {}, {\n                    file: e.target.files[0]\n                  }));\n                  setDummy(dummy + 1);\n                },\n                id: `upload${index}`,\n                type: \"file\",\n                accept: \"image/*\",\n                capture: \"environment\"\n              })]\n            })\n          })]\n        }, index)]\n      });\n    });\n    return render;\n  };\n\n  const renderHistoryPosm = () => {\n    var render = posmList.map((val, index) => {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            fontSize: \"12px\",\n            color: \"#b9b9c3\"\n          },\n          children: [\"POSM \", index + 1]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.visibility_grid_history,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.grid_50,\n              children: [/*#__PURE__*/_jsx(Card, {\n                style: {\n                  height: \"32px\",\n                  border: \"1px solid #e9ecf2\",\n                  padding: \"6px 10px\",\n                  borderRadius: \"5px\"\n                },\n                children: val.tipe\n              }), /*#__PURE__*/_jsx(Card, {\n                style: {\n                  height: \"32px\",\n                  border: \"1px solid #e9ecf2\",\n                  padding: \"6px 10px\",\n                  borderRadius: \"5px\"\n                },\n                children: val.brandName\n              })]\n            }), /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                fontSize: \"10px\",\n                color: \"#41867A\",\n                fontWeight: \"500\"\n              },\n              onClick: () => {\n                onFileFocus(val);\n              },\n              children: val.namaFile\n            })]\n          })\n        }, index)]\n      }) // <div key={index} className={styles.visibility_grid_history}>\n      //   <div>POSM {index + 1}</div>\n      //   <div className={styles.visibility_dropdown}>\n      //     <Card\n      //       style={{\n      //         height: \"32px\",\n      //         border: \"1px solid #e9ecf2\",\n      //         padding: \"6px 10px\",\n      //         borderRadius: \"5px\",\n      //       }}\n      //     >\n      //       {val.tipe}\n      //     </Card>\n      //     <span\n      //       style={{\n      //         fontSize: \"10px\",\n      //         color: \"#41867A\",\n      //         fontWeight: \"500\",\n      //       }}\n      //       onClick={() => {\n      //         onFileFocus(val);\n      //       }}\n      //     >\n      //       {val.namaFile}\n      //     </span>\n      //   </div>\n      // </div>\n      ;\n    });\n\n    if (loading || loadingBrand) {\n      return /*#__PURE__*/_jsx(Spinner, {});\n    } else {\n      return render;\n    }\n  };\n\n  const onSave = () => {\n    console.log(vis);\n\n    if (newNOO) {\n      actions.setSpreadingVisibility(vis);\n      Router.push(`/visit/spreading/submit?new=true`);\n    } else {\n      if (type === \"PLAN\") {\n        actions.setPlanVisibility(vis);\n        Router.push(`/visit/plan/${router.query.id}`);\n      } else if (type === \"UNPLAN\") {\n        actions.setUnplanVisibility(vis);\n        Router.push(`/visit/unplan/submit`);\n      } else if (type === \"SPREADING\") {\n        actions.setSpreadingVisibility(vis);\n        Router.push(`/visit/spreading/submit`);\n      }\n    }\n  }; // const displayView = () => {\n  //   // let reader = new FileReader();\n  //   var objectURL = URL.createObjectURL(fileFocus);\n  //   // myImage.src = objectURL;\n  //   return objectURL;\n  // };\n\n\n  const render = () => {\n    if (loading || loadingBrand) {\n      return /*#__PURE__*/_jsx(Spinner, {});\n    } else {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        children: [modal ? /*#__PURE__*/_jsx(Modal, {\n          onClick: () => {\n            setFileFocus(null);\n            setModal(false);\n          },\n          children: /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              maxHeight: \"100%\",\n              overflow: \"auto\"\n            },\n            children: /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: \"400px\",\n                maxHeight: \"100%\",\n                margin: \"20px auto\"\n              },\n              children: loadingView ? /*#__PURE__*/_jsx(Spinner, {}) : /*#__PURE__*/_jsx(\"img\", {\n                style: {\n                  width: \"380px\",\n                  margin: \"0 10px\"\n                },\n                src: fileFocus\n              })\n            })\n          })\n        }) : null, /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.wrapper,\n          children: [type.includes(\"HISTORY\") ? /*#__PURE__*/_jsx(Nav, {\n            title: \"Visibility\",\n            color: \"white\",\n            backAction: () => {\n              Router.back();\n            }\n          }) : /*#__PURE__*/_jsx(Nav, {\n            title: \"Visibility\",\n            color: \"white\",\n            action: \"Save\",\n            onClick: () => {\n              onSave();\n            },\n            backAction: () => {\n              if (type === \"PLAN\") {\n                if (state.visitPlanReducer.visibility.length > 0) {\n                  setVis([...state.visitPlanReducer.visibility]);\n                } else {\n                  setVis([...initialVis]);\n                }\n              }\n\n              if (type === \"UNPLAN\") {\n                if (state.visitUnplanReducer.visibility.length > 0) {\n                  setVis([...state.visitUnplanReducer.visibility]);\n                } else {\n                  setVis([...initialVis]);\n                }\n              }\n\n              if (type === \"SPREADING\") {\n                if (state.visitSpreadingReducer.visibility.length > 0) {\n                  setVis([...state.visitSpreadingReducer.visibility]);\n                } else {\n                  setVis([...initialVis]);\n                }\n              }\n\n              Router.back();\n            },\n            disable: false\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.main,\n            children: type.includes(\"HISTORY\") ? renderHistoryPosm() : renderInputUpload()\n          })]\n        })]\n      });\n    }\n  };\n\n  return render();\n}","map":null,"metadata":{},"sourceType":"module"}
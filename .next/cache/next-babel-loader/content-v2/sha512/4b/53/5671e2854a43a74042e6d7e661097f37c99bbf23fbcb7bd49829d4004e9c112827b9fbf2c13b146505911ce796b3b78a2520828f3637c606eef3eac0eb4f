{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rico\\\\Desktop\\\\Home\\\\Kalbe app\\\\sakamor-new\\\\pages\\\\announcement.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styles from \"../styles/pages/Announcement.module.css\";\nimport Nav from \"../components/Nav\";\nimport { Stores } from \"../store\";\nimport BotNav from \"../components/BotNav\";\nimport { getAllAnnouncement, updateReadAnnouncement } from \"../helper\";\nimport moment from \"moment\";\nimport Spinner from \"../components/Spinner\";\nexport default function Announcement() {\n  const {\n    state,\n    dispatch,\n    actions\n  } = useContext(Stores);\n  const {\n    0: announcementList,\n    1: setAnnouncementList\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"user\"));\n    getAllAnnouncement(userData).then(data => {\n      setAnnouncementList(data);\n      console.log(data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [dispatch]);\n\n  const renderAnnouncement = () => {\n    const newAnnouncement = announcementList.filter(val => {\n      return val.isRead === false;\n    });\n    const render = [];\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n    } else {\n      return announcementList.map(val => {\n        if (val.isRead) {\n          render.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.announcement_container,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: val.judul\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"12px\"\n                },\n                children: val.deskripsi\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"12px\",\n                  color: \"#B9B9C3\"\n                },\n                children: moment(val.createdDate).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false));\n        } else {\n          render.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                console.log(val.id);\n                const userData = JSON.parse(localStorage.getItem(\"user\"));\n                var data = {\n                  id: val.id,\n                  username: userData.username,\n                  isRead: true\n                };\n                updateReadAnnouncement(val.id, data).then(data => {\n                  console.log(data);\n                }).catch(err => {\n                  console.log(err);\n                });\n              },\n              className: styles.announcement_container_unread,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: val.judul\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"12px\"\n                },\n                children: val.deskripsi\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"12px\",\n                  color: \"#B9B9C3\"\n                },\n                children: moment(val.createdDate).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false));\n        }\n\n        return render;\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        title: \"Announcement\",\n        color: \"white\",\n        backHref: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.main,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"right\"\n          },\n          className: styles.announcement_container_unread,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"6px 0px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"#FEB800\",\n                backgroundColor: \"rgba(254, 184, 0, 0.12)\",\n                padding: \"2px 10px\",\n                borderRadius: \"20px\",\n                fontSize: \"12px\"\n              },\n              children: [newAnnouncement.length, \" New\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), \",\", renderAnnouncement(), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"120px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/pages/announcement.jsx"],"names":["React","useState","useEffect","useContext","styles","Nav","Stores","BotNav","getAllAnnouncement","updateReadAnnouncement","moment","Spinner","Announcement","state","dispatch","actions","announcementList","setAnnouncementList","loading","setLoading","userData","JSON","parse","localStorage","getItem","then","data","console","log","catch","err","renderAnnouncement","newAnnouncement","filter","val","isRead","render","map","push","announcement_container","judul","fontSize","deskripsi","color","createdDate","fromNow","id","username","announcement_container_unread","wrapper","main","textAlign","margin","backgroundColor","padding","borderRadius","length","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport styles from \"../styles/pages/Announcement.module.css\";\r\nimport Nav from \"../components/Nav\";\r\nimport { Stores } from \"../store\";\r\nimport BotNav from \"../components/BotNav\";\r\nimport { getAllAnnouncement, updateReadAnnouncement } from \"../helper\";\r\nimport moment from \"moment\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nexport default function Announcement() {\r\n  const { state, dispatch, actions } = useContext(Stores);\r\n  const [announcementList, setAnnouncementList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem(\"user\"));\r\n    getAllAnnouncement(userData)\r\n      .then((data) => {\r\n        setAnnouncementList(data);\r\n        console.log(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const renderAnnouncement = () => {\r\n    const newAnnouncement = announcementList.filter((val) => {\r\n      return val.isRead === false;\r\n    });\r\n    const render = [];\r\n    if (loading) {\r\n      return <Spinner />;\r\n    } else {\r\n      return announcementList.map((val) => {\r\n        if (val.isRead) {\r\n          render.push(\r\n            <>\r\n              <div className={styles.announcement_container}>\r\n                <div>{val.judul}</div>\r\n                <div style={{ fontSize: \"12px\" }}>{val.deskripsi}</div>\r\n                <div style={{ fontSize: \"12px\", color: \"#B9B9C3\" }}>\r\n                  {moment(val.createdDate).fromNow()}\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        } else {\r\n          render.push(\r\n            <>\r\n              <div\r\n                onClick={() => {\r\n                  console.log(val.id);\r\n                  const userData = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n                  var data = {\r\n                    id: val.id,\r\n                    username: userData.username,\r\n                    isRead: true,\r\n                  };\r\n                  updateReadAnnouncement(val.id, data)\r\n                    .then((data) => {\r\n                      console.log(data);\r\n                    })\r\n                    .catch((err) => {\r\n                      console.log(err);\r\n                    });\r\n                }}\r\n                className={styles.announcement_container_unread}\r\n              >\r\n                <div>{val.judul}</div>\r\n                <div style={{ fontSize: \"12px\" }}>{val.deskripsi}</div>\r\n                <div style={{ fontSize: \"12px\", color: \"#B9B9C3\" }}>\r\n                  {moment(val.createdDate).fromNow()}\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        }\r\n        return render;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper}>\r\n        <Nav title={\"Announcement\"} color={\"white\"} backHref={\"/\"} />\r\n        <div className={styles.main}>\r\n          <div\r\n            style={{ textAlign: \"right\" }}\r\n            className={styles.announcement_container_unread}\r\n          >\r\n            <div style={{ margin: \"6px 0px\" }}>\r\n              <span\r\n                style={{\r\n                  color: \"#FEB800\",\r\n                  backgroundColor: \"rgba(254, 184, 0, 0.12)\",\r\n                  padding: \"2px 10px\",\r\n                  borderRadius: \"20px\",\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                {newAnnouncement.length} New\r\n              </span>\r\n            </div>\r\n          </div>\r\n          ,{renderAnnouncement()}\r\n          <div style={{ marginBottom: \"120px\" }} />\r\n        </div>\r\n      </div>\r\n      <BotNav />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
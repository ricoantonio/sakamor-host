{"ast":null,"code":"import _defineProperty from \"C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar defaultVisibility = {\n  visibility: []\n};\n\nvar visibilityReducer = function visibilityReducer(state, action) {\n  switch (action.type) {\n    case \"SET_VISIBILITY\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        visibility: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport { visibilityReducer, defaultVisibility };","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/store/reducers/visibility.js"],"names":["defaultVisibility","visibility","visibilityReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,IAAMA,iBAAiB,GAAG;AACxBC,EAAAA,UAAU,EAAE;AADY,CAA1B;;AAIA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,6CAAYF,KAAZ;AAAmBF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAAtC;;AAEF;AACE,aAAOH,KAAP;AALJ;AAOD,CARD;;AAUA,SAASD,iBAAT,EAA4BF,iBAA5B","sourcesContent":["const defaultVisibility = {\r\n  visibility: [],\r\n};\r\n\r\nconst visibilityReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_VISIBILITY\":\r\n      return { ...state, visibility: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { visibilityReducer, defaultVisibility };\r\n"]},"metadata":{},"sourceType":"module"}
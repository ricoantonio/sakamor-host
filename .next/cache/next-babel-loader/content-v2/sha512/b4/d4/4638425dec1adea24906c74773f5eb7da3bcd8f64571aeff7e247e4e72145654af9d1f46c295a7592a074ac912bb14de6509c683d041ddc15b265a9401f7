{"ast":null,"code":"import \"firebase/messaging\";\nimport firebase from \"firebase/app\";\nconst firebaseCloudMessaging = {\n  //checking whether token is available in indexed DB\n  tokenInlocalforage: async () => {\n    return localStorage.getItem(\"fcm_token\");\n  },\n  //initializing firebase app\n  init: async function () {\n    if (!firebase.apps.length) {\n      firebase.initializeApp({\n        apiKey: \"AIzaSyAMTirYpyzY7QWDkzSPsofpo68jaFltnrk\",\n        authDomain: \"sakamor-8f28d.firebaseapp.com\",\n        projectId: \"sakamor-8f28d\",\n        storageBucket: \"sakamor-8f28d.appspot.com\",\n        messagingSenderId: \"400720458166\",\n        appId: \"1:400720458166:web:cf7afc06ec3ac419d69117\"\n      });\n\n      try {\n        const messaging = firebase.messaging();\n        const tokenInLocalForage = await this.tokenInlocalforage(); //if FCM token is already there just return the token\n\n        if (tokenInLocalForage !== null) {\n          return tokenInLocalForage;\n        } //requesting notification permission from browser\n\n\n        const status = await Notification.requestPermission();\n\n        if (status && status === \"granted\") {\n          //getting token from FCM\n          const fcm_token = await messaging.getToken();\n\n          if (fcm_token) {\n            //setting FCM token in indexed db using localforage\n            localStorage.setItem(\"fcm_token\", fcm_token); //return the FCM token after saving it\n\n            return fcm_token;\n          }\n        }\n      } catch (error) {\n        console.error(error);\n        return null;\n      }\n    }\n  }\n};\nexport { firebaseCloudMessaging };","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/webPush.js"],"names":["firebase","firebaseCloudMessaging","tokenInlocalforage","localStorage","getItem","init","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","messaging","tokenInLocalForage","status","Notification","requestPermission","fcm_token","getToken","setItem","error","console"],"mappings":"AAAA,OAAO,oBAAP;AACA,OAAOA,QAAP,MAAqB,cAArB;AAEA,MAAMC,sBAAsB,GAAG;AAC7B;AACAC,EAAAA,kBAAkB,EAAE,YAAY;AAC9B,WAAOC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAP;AACD,GAJ4B;AAM7B;AACAC,EAAAA,IAAI,EAAE,kBAAkB;AACtB,QAAI,CAACL,QAAQ,CAACM,IAAT,CAAcC,MAAnB,EAA2B;AACzBP,MAAAA,QAAQ,CAACQ,aAAT,CAAuB;AACrBC,QAAAA,MAAM,EAAE,yCADa;AAErBC,QAAAA,UAAU,EAAE,+BAFS;AAGrBC,QAAAA,SAAS,EAAE,eAHU;AAIrBC,QAAAA,aAAa,EAAE,2BAJM;AAKrBC,QAAAA,iBAAiB,EAAE,cALE;AAMrBC,QAAAA,KAAK,EAAE;AANc,OAAvB;;AASA,UAAI;AACF,cAAMC,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AACA,cAAMC,kBAAkB,GAAG,MAAM,KAAKd,kBAAL,EAAjC,CAFE,CAIF;;AACA,YAAIc,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B,iBAAOA,kBAAP;AACD,SAPC,CASF;;;AACA,cAAMC,MAAM,GAAG,MAAMC,YAAY,CAACC,iBAAb,EAArB;;AACA,YAAIF,MAAM,IAAIA,MAAM,KAAK,SAAzB,EAAoC;AAClC;AACA,gBAAMG,SAAS,GAAG,MAAML,SAAS,CAACM,QAAV,EAAxB;;AACA,cAAID,SAAJ,EAAe;AACb;AACAjB,YAAAA,YAAY,CAACmB,OAAb,CAAqB,WAArB,EAAkCF,SAAlC,EAFa,CAGb;;AACA,mBAAOA,SAAP;AACD;AACF;AACF,OArBD,CAqBE,OAAOG,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,eAAO,IAAP;AACD;AACF;AACF;AA5C4B,CAA/B;AA8CA,SAAStB,sBAAT","sourcesContent":["import \"firebase/messaging\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst firebaseCloudMessaging = {\r\n  //checking whether token is available in indexed DB\r\n  tokenInlocalforage: async () => {\r\n    return localStorage.getItem(\"fcm_token\");\r\n  },\r\n\r\n  //initializing firebase app\r\n  init: async function () {\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp({\r\n        apiKey: \"AIzaSyAMTirYpyzY7QWDkzSPsofpo68jaFltnrk\",\r\n        authDomain: \"sakamor-8f28d.firebaseapp.com\",\r\n        projectId: \"sakamor-8f28d\",\r\n        storageBucket: \"sakamor-8f28d.appspot.com\",\r\n        messagingSenderId: \"400720458166\",\r\n        appId: \"1:400720458166:web:cf7afc06ec3ac419d69117\",\r\n      });\r\n\r\n      try {\r\n        const messaging = firebase.messaging();\r\n        const tokenInLocalForage = await this.tokenInlocalforage();\r\n\r\n        //if FCM token is already there just return the token\r\n        if (tokenInLocalForage !== null) {\r\n          return tokenInLocalForage;\r\n        }\r\n\r\n        //requesting notification permission from browser\r\n        const status = await Notification.requestPermission();\r\n        if (status && status === \"granted\") {\r\n          //getting token from FCM\r\n          const fcm_token = await messaging.getToken();\r\n          if (fcm_token) {\r\n            //setting FCM token in indexed db using localforage\r\n            localStorage.setItem(\"fcm_token\", fcm_token);\r\n            //return the FCM token after saving it\r\n            return fcm_token;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n      }\r\n    }\r\n  },\r\n};\r\nexport { firebaseCloudMessaging };\r\n"]},"metadata":{},"sourceType":"module"}
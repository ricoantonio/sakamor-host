{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Rico\\\\Desktop\\\\Home\\\\Kalbe app\\\\sakamor-new\\\\pages\\\\reward\\\\benefits\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styles from \"../../../styles/pages/Announcement.module.css\";\nimport Nav from \"../../../components/Nav\";\nimport { Stores } from \"../../../store\";\nimport BotNav from \"../../../components/BotNav\";\nimport { getAllAnnouncement, getBenefitCodeCabang, updateReadAnnouncement } from \"../../../helper\";\nimport moment from \"moment\";\nimport Spinner from \"../../../components/Spinner\";\nexport default function Announcement() {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(Stores),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch,\n      actions = _useContext.actions;\n\n  var _useState = useState([]),\n      benefit = _useState[0],\n      setBenefit = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    var userData = JSON.parse(localStorage.getItem(\"user\"));\n    getBenefitCodeCabang(userData).then(function (data) {\n      setBenefit(data); // console.log(data);\n\n      setLoading(false);\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }, [dispatch]);\n\n  var renderBenefit = function renderBenefit() {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, _this);\n    } else {\n      return benefit.map(function (val) {\n        var b = val.deskripsi.split(\"$$\");\n\n        for (var i = 1; i < b.length; i += 2) {\n          var newlink = \"<a href=\" + \"\\\"\".concat(b[i], \"\\\" target=\\\"_blank\\\">\") + \"\".concat(b[i]) + \"</a>\";\n          b.splice(i, 1, newlink);\n        }\n\n        var c = b.join(\"\");\n\n        if (val.isRead) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.announcement_container,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: val.judul\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"12px\"\n                },\n                dangerouslySetInnerHTML: {\n                  __html: c\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"12px\",\n                  color: \"#B9B9C3\"\n                },\n                children: moment(val.createdDate).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false);\n        } else {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.announcement_container_unread,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: val.judul\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"12px\"\n                },\n                children: c\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"12px\",\n                  color: \"#B9B9C3\"\n                },\n                children: moment(val.createdDate).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false);\n        }\n      });\n    }\n  };\n\n  var newAnnouncement = benefit.filter(function (val) {\n    return val.isRead === false;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        title: \"Benefits\",\n        color: \"white\",\n        backHref: \"/reward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.main,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"right\"\n          },\n          className: styles.announcement_container_unread,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"6px 0px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"#FEB800\",\n                backgroundColor: \"rgba(254, 184, 0, 0.12)\",\n                padding: \"2px 10px\",\n                borderRadius: \"20px\",\n                fontSize: \"12px\"\n              },\n              children: [newAnnouncement.length, \" New\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), renderBenefit(), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"120px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Announcement, \"U5XfJPF7apDiAwYESEZfMWd73Ro=\");\n\n_c = Announcement;\n\nvar _c;\n\n$RefreshReg$(_c, \"Announcement\");","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/pages/reward/benefits/index.jsx"],"names":["React","useState","useEffect","useContext","styles","Nav","Stores","BotNav","getAllAnnouncement","getBenefitCodeCabang","updateReadAnnouncement","moment","Spinner","Announcement","state","dispatch","actions","benefit","setBenefit","loading","setLoading","userData","JSON","parse","localStorage","getItem","then","data","err","console","log","renderBenefit","map","val","b","deskripsi","split","i","length","newlink","splice","c","join","isRead","announcement_container","judul","fontSize","__html","color","createdDate","fromNow","announcement_container_unread","newAnnouncement","filter","wrapper","main","textAlign","margin","backgroundColor","padding","borderRadius","marginBottom"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,+CAAnB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SACEC,kBADF,EAEEC,oBAFF,EAGEC,sBAHF,QAIO,iBAJP;AAKA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAAA;;AAAA,oBACAV,UAAU,CAACG,MAAD,CADV;AAAA,MAC7BQ,KAD6B,eAC7BA,KAD6B;AAAA,MACtBC,QADsB,eACtBA,QADsB;AAAA,MACZC,OADY,eACZA,OADY;;AAAA,kBAEPf,QAAQ,CAAC,EAAD,CAFD;AAAA,MAE9BgB,OAF8B;AAAA,MAErBC,UAFqB;;AAAA,mBAGPjB,QAAQ,CAAC,IAAD,CAHD;AAAA,MAG9BkB,OAH8B;AAAA,MAGrBC,UAHqB;;AAKrClB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMmB,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAjB;AACAhB,IAAAA,oBAAoB,CAACY,QAAD,CAApB,CACGK,IADH,CACQ,UAACC,IAAD,EAAU;AACdT,MAAAA,UAAU,CAACS,IAAD,CAAV,CADc,CAEd;;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH,WAMS,UAACQ,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD,GAXQ,EAWN,CAACb,QAAD,CAXM,CAAT;;AAaA,MAAMgB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIZ,OAAJ,EAAa;AACX,0BAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFD,MAEO;AACL,aAAOF,OAAO,CAACe,GAAR,CAAY,UAACC,GAAD,EAAS;AAC1B,YAAIC,CAAC,GAAGD,GAAG,CAACE,SAAJ,CAAcC,KAAd,CAAoB,IAApB,CAAR;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAAC,CAACI,MAAtB,EAA8BD,CAAC,IAAI,CAAnC,EAAsC;AACpC,cAAIE,OAAO,GACT,yBAAiBL,CAAC,CAACG,CAAD,CAAlB,uCAA+CH,CAAC,CAACG,CAAD,CAAhD,UADF;AAEAH,UAAAA,CAAC,CAACM,MAAF,CAASH,CAAT,EAAY,CAAZ,EAAeE,OAAf;AACD;;AACD,YAAIE,CAAC,GAAGP,CAAC,CAACQ,IAAF,CAAO,EAAP,CAAR;;AAEA,YAAIT,GAAG,CAACU,MAAR,EAAgB;AACd,8BACE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAEvC,MAAM,CAACwC,sBAAvB;AAAA,sCACE;AAAA,0BAAMX,GAAG,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ,iBADT;AAEE,gBAAA,uBAAuB,EAAE;AAAEC,kBAAAA,MAAM,EAAEN;AAAV;AAF3B;AAAA;AAAA;AAAA;AAAA,uBAFF,eAME;AAAK,gBAAA,KAAK,EAAE;AAAEK,kBAAAA,QAAQ,EAAE,MAAZ;AAAoBE,kBAAAA,KAAK,EAAE;AAA3B,iBAAZ;AAAA,0BACGrC,MAAM,CAACsB,GAAG,CAACgB,WAAL,CAAN,CAAwBC,OAAxB;AADH;AAAA;AAAA;AAAA;AAAA,uBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAcD,SAfD,MAeO;AACL,8BACE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAE9C,MAAM,CAAC+C,6BAAvB;AAAA,sCACE;AAAA,0BAAMlB,GAAG,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAK,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ,iBAAZ;AAAA,0BAAmCL;AAAnC;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE;AAAK,gBAAA,KAAK,EAAE;AAAEK,kBAAAA,QAAQ,EAAE,MAAZ;AAAoBE,kBAAAA,KAAK,EAAE;AAA3B,iBAAZ;AAAA,0BACGrC,MAAM,CAACsB,GAAG,CAACgB,WAAL,CAAN,CAAwBC,OAAxB;AADH;AAAA;AAAA;AAAA;AAAA,uBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAWD;AACF,OArCM,CAAP;AAsCD;AACF,GA3CD;;AA6CA,MAAME,eAAe,GAAGnC,OAAO,CAACoC,MAAR,CAAe,UAACpB,GAAD,EAAS;AAC9C,WAAOA,GAAG,CAACU,MAAJ,KAAe,KAAtB;AACD,GAFuB,CAAxB;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEvC,MAAM,CAACkD,OAAvB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE,UAAZ;AAAwB,QAAA,KAAK,EAAE,OAA/B;AAAwC,QAAA,QAAQ,EAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAElD,MAAM,CAACmD,IAAvB;AAAA,gCACE;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WADT;AAEE,UAAA,SAAS,EAAEpD,MAAM,CAAC+C,6BAFpB;AAAA,iCAIE;AAAK,YAAA,KAAK,EAAE;AAAEM,cAAAA,MAAM,EAAE;AAAV,aAAZ;AAAA,mCACE;AACE,cAAA,KAAK,EAAE;AACLT,gBAAAA,KAAK,EAAE,SADF;AAELU,gBAAAA,eAAe,EAAE,yBAFZ;AAGLC,gBAAAA,OAAO,EAAE,UAHJ;AAILC,gBAAAA,YAAY,EAAE,MAJT;AAKLd,gBAAAA,QAAQ,EAAE;AALL,eADT;AAAA,yBASGM,eAAe,CAACd,MATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBADF,EAmBGP,aAAa,EAnBhB,eAoBE;AAAK,UAAA,KAAK,EAAE;AAAE8B,YAAAA,YAAY,EAAE;AAAhB;AAAZ;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA,kBADF;AA8BD;;GAhGuBhD,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport styles from \"../../../styles/pages/Announcement.module.css\";\r\nimport Nav from \"../../../components/Nav\";\r\nimport { Stores } from \"../../../store\";\r\nimport BotNav from \"../../../components/BotNav\";\r\nimport {\r\n  getAllAnnouncement,\r\n  getBenefitCodeCabang,\r\n  updateReadAnnouncement,\r\n} from \"../../../helper\";\r\nimport moment from \"moment\";\r\nimport Spinner from \"../../../components/Spinner\";\r\n\r\nexport default function Announcement() {\r\n  const { state, dispatch, actions } = useContext(Stores);\r\n  const [benefit, setBenefit] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem(\"user\"));\r\n    getBenefitCodeCabang(userData)\r\n      .then((data) => {\r\n        setBenefit(data);\r\n        // console.log(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const renderBenefit = () => {\r\n    if (loading) {\r\n      return <Spinner />;\r\n    } else {\r\n      return benefit.map((val) => {\r\n        var b = val.deskripsi.split(\"$$\");\r\n        for (let i = 1; i < b.length; i += 2) {\r\n          var newlink =\r\n            `<a href=` + `\"${b[i]}\" target=\"_blank\">` + `${b[i]}` + `</a>`;\r\n          b.splice(i, 1, newlink);\r\n        }\r\n        var c = b.join(\"\");\r\n\r\n        if (val.isRead) {\r\n          return (\r\n            <>\r\n              <div className={styles.announcement_container}>\r\n                <div>{val.judul}</div>\r\n                <div\r\n                  style={{ fontSize: \"12px\" }}\r\n                  dangerouslySetInnerHTML={{ __html: c }}\r\n                />\r\n                <div style={{ fontSize: \"12px\", color: \"#B9B9C3\" }}>\r\n                  {moment(val.createdDate).fromNow()}\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        } else {\r\n          return (\r\n            <>\r\n              <div className={styles.announcement_container_unread}>\r\n                <div>{val.judul}</div>\r\n                <div style={{ fontSize: \"12px\" }}>{c}</div>\r\n                <div style={{ fontSize: \"12px\", color: \"#B9B9C3\" }}>\r\n                  {moment(val.createdDate).fromNow()}\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const newAnnouncement = benefit.filter((val) => {\r\n    return val.isRead === false;\r\n  });\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper}>\r\n        <Nav title={\"Benefits\"} color={\"white\"} backHref={\"/reward\"} />\r\n        <div className={styles.main}>\r\n          <div\r\n            style={{ textAlign: \"right\" }}\r\n            className={styles.announcement_container_unread}\r\n          >\r\n            <div style={{ margin: \"6px 0px\" }}>\r\n              <span\r\n                style={{\r\n                  color: \"#FEB800\",\r\n                  backgroundColor: \"rgba(254, 184, 0, 0.12)\",\r\n                  padding: \"2px 10px\",\r\n                  borderRadius: \"20px\",\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                {newAnnouncement.length} New\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {renderBenefit()}\r\n          <div style={{ marginBottom: \"120px\" }} />\r\n        </div>\r\n      </div>\r\n      <BotNav />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rico\\\\Desktop\\\\Home\\\\Kalbe app\\\\sakamor-new\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../styles/globals.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Store } from \"../store\";\nimport { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport { firebaseCloudMessaging } from \"../webPush\";\nimport firebase from \"firebase/app\";\nimport { getAllAnnouncement } from \"../helper\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n\n    if (!user) {\n      Router.push(\"/login\");\n    }\n  }, []);\n  useEffect(() => {\n    setToken();\n\n    async function setToken() {\n      try {\n        const token = await firebaseCloudMessaging.init();\n\n        if (token) {\n          getMessage();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    function getMessage() {\n      const userData = localStorage.getItem(\"user\");\n      const messaging = firebase.messaging();\n      console.log({\n        messaging\n      });\n      getAllAnnouncement(userData).then(data => {\n        console.log(data);\n      }).catch(err => {\n        console.log(err);\n      });\n      messaging.onMessage(message => {\n        const {\n          title,\n          body\n        } = JSON.parse(message.notification);\n        var options = {\n          body\n        };\n        self.registration.showNotification(title, options);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Store, {\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/pages/_app.js"],"names":["Store","useEffect","Router","firebaseCloudMessaging","firebase","getAllAnnouncement","MyApp","Component","pageProps","user","localStorage","getItem","push","setToken","token","init","getMessage","error","console","log","userData","messaging","then","data","catch","err","onMessage","message","title","body","JSON","parse","notification","options","self","registration","showNotification"],"mappings":";;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAO,sCAAP;AACA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,sBAAT,QAAuC,YAAvC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,kBAAT,QAAmC,WAAnC;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvCP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AACA,QAAI,CAACF,IAAL,EAAW;AACTP,MAAAA,MAAM,CAACU,IAAP,CAAY,QAAZ;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ;;AACR,mBAAeA,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,KAAK,GAAG,MAAMX,sBAAsB,CAACY,IAAvB,EAApB;;AACA,YAAID,KAAJ,EAAW;AACTE,UAAAA,UAAU;AACX;AACF,OALD,CAKE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACD,aAASD,UAAT,GAAsB;AACpB,YAAMI,QAAQ,GAAGV,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAjB;AAEA,YAAMU,SAAS,GAAGjB,QAAQ,CAACiB,SAAT,EAAlB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEE,QAAAA;AAAF,OAAZ;AACAhB,MAAAA,kBAAkB,CAACe,QAAD,CAAlB,CACGE,IADH,CACSC,IAAD,IAAU;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdP,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD,OANH;AAOAJ,MAAAA,SAAS,CAACK,SAAV,CAAqBC,OAAD,IAAa;AAC/B,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAkBC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACK,YAAnB,CAAxB;AACA,YAAIC,OAAO,GAAG;AACZJ,UAAAA;AADY,SAAd;AAGAK,QAAAA,IAAI,CAACC,YAAL,CAAkBC,gBAAlB,CAAmCR,KAAnC,EAA0CK,OAA1C;AACD,OAND;AAOD;AACF,GAhCQ,CAAT;AAkCA,sBACE,QAAC,KAAD;AAAA,2BACE,QAAC,SAAD,oBAAezB,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,eAAeF,KAAf","sourcesContent":["import \"../styles/globals.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Store } from \"../store\";\nimport { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport { firebaseCloudMessaging } from \"../webPush\";\nimport firebase from \"firebase/app\";\nimport { getAllAnnouncement } from \"../helper\";\n\nfunction MyApp({ Component, pageProps }) {\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (!user) {\n      Router.push(\"/login\");\n    }\n  }, []);\n\n  useEffect(() => {\n    setToken();\n    async function setToken() {\n      try {\n        const token = await firebaseCloudMessaging.init();\n        if (token) {\n          getMessage();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    function getMessage() {\n      const userData = localStorage.getItem(\"user\");\n\n      const messaging = firebase.messaging();\n      console.log({ messaging });\n      getAllAnnouncement(userData)\n        .then((data) => {\n          console.log(data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      messaging.onMessage((message) => {\n        const { title, body } = JSON.parse(message.notification);\n        var options = {\n          body,\n        };\n        self.registration.showNotification(title, options);\n      });\n    }\n  });\n\n  return (\n    <Store>\n      <Component {...pageProps} />\n    </Store>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}
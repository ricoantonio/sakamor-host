{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rico\\\\Desktop\\\\Home\\\\Kalbe app\\\\sakamor-new\\\\pages\\\\calender.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport styles from \"../styles/pages/Calender.module.css\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport { Stores } from \"../store\";\nimport Spinner from \"../components/Spinner\";\nimport BotNav from \"../components/BotNav\";\nimport Nav from \"../components/Nav\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport { getAuth, getMenu, getPlanList } from \"../helper\";\nexport default function Calender() {\n  const {\n    state,\n    dispatch,\n    actions\n  } = useContext(Stores);\n  const {\n    0: focus,\n    1: setFocus\n  } = useState(\"\");\n  const {\n    0: plan,\n    1: setPlan\n  } = useState([]);\n  const {\n    0: spreadingHistory,\n    1: setSpreadingHistory\n  } = useState([]);\n  const {\n    0: unplanHistory,\n    1: setUnplanHistory\n  } = useState([]);\n  const {\n    0: role,\n    1: setRole\n  } = useState(\"\");\n  const {\n    0: topMenu,\n    1: setTopMenu\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: loadingMenu,\n    1: setLoadingMenu\n  } = useState(false);\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var now = new Date();\n  var dayName = days[now.getDay()];\n  var date = now.getDate();\n  var month = now.getMonth() + 1;\n  var year = now.getFullYear();\n  const monthName = {\n    full: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    part: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  const renderTopMenu = () => {\n    const menu = [\"Day\", \"Week\", \"Month\"];\n    return menu.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: setFocus(val),\n        className: styles.menu_active,\n        children: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const renderPage = () => {\n    if (loading && loadingMenu) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"icon\",\n          href: \"/favicon.ico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.wrapper,\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            title: \"Calender\",\n            color: \"white\",\n            noBack: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                borderRadius: \"6px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.menu_grid,\n                children: renderTopMenu()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.day_title,\n                children: dayName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.day_grid,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/cev_left.svg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.day_date_display,\n                    children: date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/cev_right.svg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.day_bot_display,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: monthName.full[month - 1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BotNav, {\n        focus: \"calender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this);\n  };\n\n  return renderPage();\n}","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/pages/calender.jsx"],"names":["React","useState","useContext","useEffect","Head","styles","Router","Link","Stores","Spinner","BotNav","Nav","Button","Card","getAuth","getMenu","getPlanList","Calender","state","dispatch","actions","focus","setFocus","plan","setPlan","spreadingHistory","setSpreadingHistory","unplanHistory","setUnplanHistory","role","setRole","topMenu","setTopMenu","loading","setLoading","loadingMenu","setLoadingMenu","days","now","Date","dayName","getDay","date","getDate","month","getMonth","year","getFullYear","monthName","full","part","renderTopMenu","menu","map","val","menu_active","renderPage","container","wrapper","main","borderRadius","menu_grid","day_title","day_grid","day_date_display","day_bot_display"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport Head from \"next/head\";\r\nimport styles from \"../styles/pages/Calender.module.css\";\r\nimport Router from \"next/router\";\r\nimport Link from \"next/link\";\r\nimport { Stores } from \"../store\";\r\n\r\nimport Spinner from \"../components/Spinner\";\r\nimport BotNav from \"../components/BotNav\";\r\nimport Nav from \"../components/Nav\";\r\nimport Button from \"../components/Button\";\r\nimport Card from \"../components/Card\";\r\n\r\nimport { getAuth, getMenu, getPlanList } from \"../helper\";\r\n\r\nexport default function Calender() {\r\n  const { state, dispatch, actions } = useContext(Stores);\r\n  const [focus, setFocus] = useState(\"\");\r\n  const [plan, setPlan] = useState([]);\r\n  const [spreadingHistory, setSpreadingHistory] = useState([]);\r\n  const [unplanHistory, setUnplanHistory] = useState([]);\r\n  const [role, setRole] = useState(\"\");\r\n  const [topMenu, setTopMenu] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingMenu, setLoadingMenu] = useState(false);\r\n  var days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  var now = new Date();\r\n  var dayName = days[now.getDay()];\r\n  var date = now.getDate();\r\n  var month = now.getMonth() + 1;\r\n  var year = now.getFullYear();\r\n\r\n  const monthName = {\r\n    full: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ],\r\n    part: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n  };\r\n\r\n  const renderTopMenu = () => {\r\n    const menu = [\"Day\", \"Week\", \"Month\"];\r\n    return menu.map((val) => {\r\n      return (\r\n        <div onClick={setFocus(val)} className={styles.menu_active}>\r\n          {val}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderPage = () => {\r\n    if (loading && loadingMenu) {\r\n      return <Spinner />;\r\n    } else\r\n      return (\r\n        <div>\r\n          <Head>\r\n            <title>Home</title>\r\n            <link rel=\"icon\" href=\"/favicon.ico\" />\r\n          </Head>\r\n          <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n              <Nav title={\"Calender\"} color={\"white\"} noBack />\r\n              <div className={styles.main}>\r\n                <Card style={{ borderRadius: \"6px\" }}>\r\n                  <div className={styles.menu_grid}>{renderTopMenu()}</div>\r\n                  <div className={styles.day_title}>{dayName}</div>\r\n                  <div className={styles.day_grid}>\r\n                    <div>\r\n                      <img src={\"/cev_left.svg\"} />\r\n                    </div>\r\n                    <div>\r\n                      <div className={styles.day_date_display}>{date}</div>\r\n                    </div>\r\n                    <div>\r\n                      <img src={\"/cev_right.svg\"} />\r\n                    </div>\r\n                  </div>\r\n                  <div className={styles.day_bot_display}>\r\n                    <div>{monthName.full[month - 1]}</div>\r\n                    <div>{year}</div>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <BotNav focus={\"calender\"} />\r\n        </div>\r\n      );\r\n  };\r\n  return renderPage();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
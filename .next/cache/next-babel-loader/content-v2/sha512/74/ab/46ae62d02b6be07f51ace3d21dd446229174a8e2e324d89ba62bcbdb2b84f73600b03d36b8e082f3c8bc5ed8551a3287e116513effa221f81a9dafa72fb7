{"ast":null,"code":"import AsyncStorage from '@react-native-async-storage/async-storage';\nexport default (dispatch => ({\n  newUser: async name => {\n    try {\n      const oldUser = await AsyncStorage.getItem('username');\n\n      if (oldUser !== name) {\n        try {\n          await AsyncStorage.setItem('username', name);\n          await AsyncStorage.removeItem('track');\n          await dispatch({\n            type: 'NEW_USER',\n            payload: name\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        await dispatch({\n          type: 'NEW_USER',\n          payload: name\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}));","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/store/actions/newUser.js"],"names":["AsyncStorage","dispatch","newUser","name","oldUser","getItem","setItem","removeItem","type","payload","error","console","log","e"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,gBAAgBC,QAAD,KAAe;AAC3BC,EAAAA,OAAO,EAAE,MAAOC,IAAP,IAAgB;AACtB,QAAI;AACD,YAAMC,OAAO,GAAG,MAAMJ,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAtB;;AACA,UAAID,OAAO,KAAKD,IAAhB,EAAsB;AACnB,YAAI;AACD,gBAAMH,YAAY,CAACM,OAAb,CAAqB,UAArB,EAAiCH,IAAjC,CAAN;AACA,gBAAMH,YAAY,CAACO,UAAb,CAAwB,OAAxB,CAAN;AACA,gBAAMN,QAAQ,CAAC;AAACO,YAAAA,IAAI,EAAE,UAAP;AAAmBC,YAAAA,OAAO,EAAEN;AAA5B,WAAD,CAAd;AACF,SAJD,CAIE,OAAOO,KAAP,EAAc;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF;AACH,OARD,MAQO;AACJ,cAAMT,QAAQ,CAAC;AAACO,UAAAA,IAAI,EAAE,UAAP;AAAmBC,UAAAA,OAAO,EAAEN;AAA5B,SAAD,CAAd;AACF;AACH,KAbD,CAaE,OAAOU,CAAP,EAAU;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACF;AACH;AAlB0B,CAAf,CAAf","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default (dispatch) => ({\r\n   newUser: async (name) => {\r\n      try {\r\n         const oldUser = await AsyncStorage.getItem('username');\r\n         if (oldUser !== name) {\r\n            try {\r\n               await AsyncStorage.setItem('username', name);\r\n               await AsyncStorage.removeItem('track');\r\n               await dispatch({type: 'NEW_USER', payload: name});\r\n            } catch (error) {\r\n               console.log(error);\r\n            }\r\n         } else {\r\n            await dispatch({type: 'NEW_USER', payload: name});\r\n         }\r\n      } catch (e) {\r\n         console.log(e);\r\n      }\r\n   },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
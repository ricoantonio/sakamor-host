{"ast":null,"code":"import _defineProperty from \"C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar defaultAvability = {\n  avability: []\n};\n\nvar avabilityReducer = function avabilityReducer(state, action) {\n  switch (action.type) {\n    case \"SET_AVABILITY\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        avability: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport { avabilityReducer, defaultAvability };","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/store/reducers/avability.js"],"names":["defaultAvability","avability","avabilityReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,IAAMA,gBAAgB,GAAG;AACvBC,EAAAA,SAAS,EAAE;AADY,CAAzB;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,6CAAYF,KAAZ;AAAmBF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAArC;;AAEF;AACE,aAAOH,KAAP;AALJ;AAOD,CARD;;AAUA,SAASD,gBAAT,EAA2BF,gBAA3B","sourcesContent":["const defaultAvability = {\r\n  avability: [],\r\n};\r\n\r\nconst avabilityReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_AVABILITY\":\r\n      return { ...state, avability: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { avabilityReducer, defaultAvability };\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// import React, { createContext, useReducer, useMemo } from \"react\";\n// import { userReducer, defaultUser } from \"./reducers/user\";\n// import { menuReducer, defaultMenu } from \"./reducers/menu\";\n// import userLogin from \"./actions/userLogin\";\n// import setMenu from \"./actions/setMenu\";\n// const Stores = createContext();\n// const Store = ({ children }) => {\n//   const [state, dispatch] = useReducer(\n//     (prevState, action) => {\n//       return {\n//         userReducer: userReducer(prevState.userReducer, action),\n//         menuReducer: menuReducer(prevState.menuReducer, action),\n//       };\n//     },\n//     {\n//       userReducer: defaultUser,\n//       menuReducer: defaultMenu,\n//     }\n//   );\n//   const actions = useMemo(\n//     () => ({\n//       ...userLogin(dispatch),\n//       ...setMenu(dispatch),\n//     }),\n//     []\n//   );\n//   return (\n//     <Stores.Provider value={{ state, dispatch, actions }}>\n//       {children}\n//     </Stores.Provider>\n//   );\n// };\n// export { Stores, Store };","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/store/index.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { createContext, useReducer, useMemo } from \"react\";\r\n\r\n// import { userReducer, defaultUser } from \"./reducers/user\";\r\n// import { menuReducer, defaultMenu } from \"./reducers/menu\";\r\n\r\n// import userLogin from \"./actions/userLogin\";\r\n// import setMenu from \"./actions/setMenu\";\r\n\r\n// const Stores = createContext();\r\n\r\n// const Store = ({ children }) => {\r\n//   const [state, dispatch] = useReducer(\r\n//     (prevState, action) => {\r\n//       return {\r\n//         userReducer: userReducer(prevState.userReducer, action),\r\n//         menuReducer: menuReducer(prevState.menuReducer, action),\r\n//       };\r\n//     },\r\n//     {\r\n//       userReducer: defaultUser,\r\n//       menuReducer: defaultMenu,\r\n//     }\r\n//   );\r\n\r\n//   const actions = useMemo(\r\n//     () => ({\r\n//       ...userLogin(dispatch),\r\n//       ...setMenu(dispatch),\r\n//     }),\r\n//     []\r\n//   );\r\n\r\n//   return (\r\n//     <Stores.Provider value={{ state, dispatch, actions }}>\r\n//       {children}\r\n//     </Stores.Provider>\r\n//   );\r\n// };\r\n\r\n// export { Stores, Store };\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst defaultTrack = {\n  track: [],\n  sort: [],\n  sortToggle: false\n};\n\nconst setData = async x => {\n  try {\n    const trackSave = JSON.stringify(x);\n    await AsyncStorage.setItem('track', trackSave);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst trackReducer = (state, action) => {\n  const track = state.track;\n  const sort = state.sort;\n  const sortToggle = state.sortToggle;\n\n  switch (action.type) {\n    case 'SORT_TOGGLE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sortToggle: !sortToggle,\n        sort: []\n      });\n\n    case 'SORT_OFF':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sortToggle: false,\n        sort: []\n      });\n\n    case 'SET_TRACK':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        track: [...action.payload]\n      });\n\n    case 'ADD_TRACK':\n      if (track.includes(action.payload)) {} else {\n        track.push(action.payload);\n        setData(track);\n      }\n\n      return state;\n\n    case 'REMOVE_TRACK':\n      var newTrack = track.filter(a => {\n        return a.event !== action.payload.event;\n      });\n      setData(newTrack);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        track: [...newTrack]\n      });\n\n    case 'ADD_SORT':\n      if (sort.includes(action.payload)) {} else {\n        sort.push(action.payload);\n      }\n\n      return state;\n\n    case 'REMOVE_SORT':\n      var newSort = sort.filter(a => {\n        return a.event !== action.payload.event;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sort: [...newSort]\n      });\n\n    case 'SORT_TRACK':\n      setData(sort);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        track: [...sort],\n        sortToggle: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport { trackReducer, defaultTrack };","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/store/reducers/track.js"],"names":["AsyncStorage","defaultTrack","track","sort","sortToggle","setData","x","trackSave","JSON","stringify","setItem","e","console","log","trackReducer","state","action","type","payload","includes","push","newTrack","filter","a","event","newSort"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,IAAI,EAAE,EAFY;AAGlBC,EAAAA,UAAU,EAAE;AAHM,CAArB;;AAMA,MAAMC,OAAO,GAAG,MAAOC,CAAP,IAAa;AAC1B,MAAI;AACD,UAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeH,CAAf,CAAlB;AACA,UAAMN,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BH,SAA9B,CAAN;AACF,GAHD,CAGE,OAAOI,CAAP,EAAU;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACF;AACH,CAPD;;AASA,MAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAMd,KAAK,GAAGa,KAAK,CAACb,KAApB;AACA,QAAMC,IAAI,GAAGY,KAAK,CAACZ,IAAnB;AACA,QAAMC,UAAU,GAAGW,KAAK,CAACX,UAAzB;;AAEA,UAAQY,MAAM,CAACC,IAAf;AACG,SAAK,aAAL;AACG,6CAAWF,KAAX;AAAkBX,QAAAA,UAAU,EAAE,CAACA,UAA/B;AAA2CD,QAAAA,IAAI,EAAE;AAAjD;;AAEH,SAAK,UAAL;AACG,6CAAWY,KAAX;AAAkBX,QAAAA,UAAU,EAAE,KAA9B;AAAqCD,QAAAA,IAAI,EAAE;AAA3C;;AAEH,SAAK,WAAL;AACG,6CAAWY,KAAX;AAAkBb,QAAAA,KAAK,EAAE,CAAC,GAAGc,MAAM,CAACE,OAAX;AAAzB;;AAEH,SAAK,WAAL;AACG,UAAIhB,KAAK,CAACiB,QAAN,CAAeH,MAAM,CAACE,OAAtB,CAAJ,EAAoC,CACnC,CADD,MACO;AACJhB,QAAAA,KAAK,CAACkB,IAAN,CAAWJ,MAAM,CAACE,OAAlB;AACAb,QAAAA,OAAO,CAACH,KAAD,CAAP;AACF;;AACD,aAAOa,KAAP;;AAEH,SAAK,cAAL;AACG,UAAIM,QAAQ,GAAGnB,KAAK,CAACoB,MAAN,CAAcC,CAAD,IAAO;AAChC,eAAOA,CAAC,CAACC,KAAF,KAAYR,MAAM,CAACE,OAAP,CAAeM,KAAlC;AACF,OAFc,CAAf;AAGAnB,MAAAA,OAAO,CAACgB,QAAD,CAAP;AACA,6CAAWN,KAAX;AAAkBb,QAAAA,KAAK,EAAE,CAAC,GAAGmB,QAAJ;AAAzB;;AAEH,SAAK,UAAL;AACG,UAAIlB,IAAI,CAACgB,QAAL,CAAcH,MAAM,CAACE,OAArB,CAAJ,EAAmC,CAClC,CADD,MACO;AACJf,QAAAA,IAAI,CAACiB,IAAL,CAAUJ,MAAM,CAACE,OAAjB;AACF;;AACD,aAAOH,KAAP;;AAEH,SAAK,aAAL;AACG,UAAIU,OAAO,GAAGtB,IAAI,CAACmB,MAAL,CAAaC,CAAD,IAAO;AAC9B,eAAOA,CAAC,CAACC,KAAF,KAAYR,MAAM,CAACE,OAAP,CAAeM,KAAlC;AACF,OAFa,CAAd;AAGA,6CAAWT,KAAX;AAAkBZ,QAAAA,IAAI,EAAE,CAAC,GAAGsB,OAAJ;AAAxB;;AAEH,SAAK,YAAL;AACGpB,MAAAA,OAAO,CAACF,IAAD,CAAP;AACA,6CAAWY,KAAX;AAAkBb,QAAAA,KAAK,EAAE,CAAC,GAAGC,IAAJ,CAAzB;AAAoCC,QAAAA,UAAU,EAAE;AAAhD;;AAEH;AACG,aAAOW,KAAP;AA3CN;AA6CF,CAlDD;;AAoDA,SAAQD,YAAR,EAAsBb,YAAtB","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst defaultTrack = {\r\n   track: [],\r\n   sort: [],\r\n   sortToggle: false,\r\n};\r\n\r\nconst setData = async (x) => {\r\n   try {\r\n      const trackSave = JSON.stringify(x);\r\n      await AsyncStorage.setItem('track', trackSave);\r\n   } catch (e) {\r\n      console.log(e);\r\n   }\r\n};\r\n\r\nconst trackReducer = (state, action) => {\r\n   const track = state.track;\r\n   const sort = state.sort;\r\n   const sortToggle = state.sortToggle;\r\n\r\n   switch (action.type) {\r\n      case 'SORT_TOGGLE':\r\n         return {...state, sortToggle: !sortToggle, sort: []};\r\n\r\n      case 'SORT_OFF':\r\n         return {...state, sortToggle: false, sort: []};\r\n\r\n      case 'SET_TRACK':\r\n         return {...state, track: [...action.payload]};\r\n\r\n      case 'ADD_TRACK':\r\n         if (track.includes(action.payload)) {\r\n         } else {\r\n            track.push(action.payload);\r\n            setData(track);\r\n         }\r\n         return state;\r\n\r\n      case 'REMOVE_TRACK':\r\n         var newTrack = track.filter((a) => {\r\n            return a.event !== action.payload.event;\r\n         });\r\n         setData(newTrack);\r\n         return {...state, track: [...newTrack]};\r\n\r\n      case 'ADD_SORT':\r\n         if (sort.includes(action.payload)) {\r\n         } else {\r\n            sort.push(action.payload);\r\n         }\r\n         return state;\r\n\r\n      case 'REMOVE_SORT':\r\n         var newSort = sort.filter((a) => {\r\n            return a.event !== action.payload.event;\r\n         });\r\n         return {...state, sort: [...newSort]};\r\n\r\n      case 'SORT_TRACK':\r\n         setData(sort);\r\n         return {...state, track: [...sort], sortToggle: false};\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport {trackReducer, defaultTrack};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rico\\\\Desktop\\\\Home\\\\Kalbe app\\\\sakamor-new\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../styles/globals.css\";\nimport { Store } from \"../store\";\nimport { useContext, useEffect } from \"react\";\nimport { Stores } from \"../store\";\nimport Spinner from \"../components/Spinner\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    console.log(actions);\n\n    if (user) {\n      //kirim ke redux\n      actions.userLogin(user);\n      console.log(user);\n    }\n  });\n\n  const render = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Store, {\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return render;\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/pages/_app.js"],"names":["Store","useContext","useEffect","Stores","Spinner","MyApp","Component","pageProps","loading","setLoading","useState","user","JSON","parse","localStorage","getItem","console","log","actions","userLogin","render"],"mappings":";;;;;;;;;AAAA,OAAO,uBAAP;AACA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,IAAD,CAAtC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;;AACA,QAAIP,IAAJ,EAAU;AACR;AACAO,MAAAA,OAAO,CAACC,SAAR,CAAkBR,IAAlB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD;AACF,GARQ,CAAT;;AAUA,QAAMS,MAAM,GAAG,MAAM;AACnB,QAAIZ,OAAJ,EAAa;AACX,0BAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE,QAAC,KAAD;AAAA,+BACE,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF,GAVD;;AAWA,SAAOa,MAAP;AACD;;AAED,eAAef,KAAf","sourcesContent":["import \"../styles/globals.css\";\nimport { Store } from \"../store\";\nimport { useContext, useEffect } from \"react\";\nimport { Stores } from \"../store\";\nimport Spinner from \"../components/Spinner\";\n\nfunction MyApp({ Component, pageProps }) {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    console.log(actions);\n    if (user) {\n      //kirim ke redux\n      actions.userLogin(user);\n      console.log(user);\n    }\n  });\n\n  const render = () => {\n    if (loading) {\n      return <Spinner />;\n    } else {\n      return (\n        <Store>\n          <Component {...pageProps} />\n        </Store>\n      );\n    }\n  };\n  return render;\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}
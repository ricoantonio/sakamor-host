{"ast":null,"code":"import _defineProperty from \"C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar defaultUser = {\n  user: ''\n};\n\nvar userReducer = function userReducer(state, action) {\n  switch (action.type) {\n    case 'NEW_USER':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case 'CHANGE_USER':\n      return {\n        user: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { userReducer, defaultUser };","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/store/reducers/user.js"],"names":["defaultUser","user","userReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,IAAMA,WAAW,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAApB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,UAAL;AACG,6CAAWF,KAAX;AAAkBF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAA/B;;AAEH,SAAK,aAAL;AACG,aAAO;AAACL,QAAAA,IAAI,EAAE;AAAP,OAAP;;AAEH;AACG,aAAOE,KAAP;AARN;AAUF,CAXD;;AAaA,SAAQD,WAAR,EAAqBF,WAArB","sourcesContent":["const defaultUser = {\r\n   user: '',\r\n};\r\n\r\nconst userReducer = (state, action) => {\r\n   switch (action.type) {\r\n      case 'NEW_USER':\r\n         return {...state, user: action.payload};\r\n\r\n      case 'CHANGE_USER':\r\n         return {user: ''};\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport {userReducer, defaultUser};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rico\\\\Desktop\\\\Home\\\\Kalbe app\\\\sakamor-new\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../styles/globals.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Store } from \"../store\";\nimport { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport { firebaseCloudMessaging } from \"../webPush\";\nimport firebase from \"firebase/app\";\nimport { getAllAnnouncement } from \"../helper\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n\n    if (!user) {\n      Router.push(\"/login\");\n    }\n  }, []);\n  useEffect(() => {\n    setToken();\n\n    if (\"serviceWorker\" in navigator) {\n      navigator.serviceWorker.addEventListener(\"message\", event => console.log(\"event for the service worker\", event));\n    }\n\n    async function setToken() {\n      try {\n        const token = await firebaseCloudMessaging.init();\n\n        if (token) {\n          getMessage();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    function getMessage() {\n      const messaging = firebase.messaging();\n      console.log({\n        messaging\n      });\n      messaging.onMessage(message => {// window.location.reload();\n        // const userData = JSON.parse(localStorage.getItem(\"user\"));\n        // getAllAnnouncement(userData)\n        //   .then((data) => {\n        //     console.log(data);\n        //     const newAnnouncement = data.filter((val) => {\n        //       return val.isRead === false;\n        //     });\n        //     console.log(newAnnouncement);\n        //     if (newAnnouncement.length > 0) {\n        //       localStorage.setItem(\"notif\", true);\n        //       console.log(\"yes notif\");\n        //     } else {\n        //       localStorage.setItem(\"notif\", true);\n        //       console.log(\"no notif\");\n        //     }\n        //   })\n        //   .catch((err) => {\n        //     console.log(err);\n        //   });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Store, {\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/pages/_app.js"],"names":["Store","useEffect","Router","firebaseCloudMessaging","firebase","getAllAnnouncement","MyApp","Component","pageProps","user","localStorage","getItem","push","setToken","navigator","serviceWorker","addEventListener","event","console","log","token","init","getMessage","error","messaging","onMessage","message"],"mappings":";;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAO,sCAAP;AACA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,sBAAT,QAAuC,YAAvC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,kBAAT,QAAmC,WAAnC;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvCP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AACA,QAAI,CAACF,IAAL,EAAW;AACTP,MAAAA,MAAM,CAACU,IAAP,CAAY,QAAZ;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ;;AACR,QAAI,mBAAmBC,SAAvB,EAAkC;AAChCA,MAAAA,SAAS,CAACC,aAAV,CAAwBC,gBAAxB,CAAyC,SAAzC,EAAqDC,KAAD,IAClDC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAA5C,CADF;AAGD;;AACD,mBAAeJ,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMO,KAAK,GAAG,MAAMjB,sBAAsB,CAACkB,IAAvB,EAApB;;AACA,YAAID,KAAJ,EAAW;AACTE,UAAAA,UAAU;AACX;AACF,OALD,CAKE,OAAOC,KAAP,EAAc;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF;;AACD,aAASD,UAAT,GAAsB;AACpB,YAAME,SAAS,GAAGpB,QAAQ,CAACoB,SAAT,EAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEK,QAAAA;AAAF,OAAZ;AACAA,MAAAA,SAAS,CAACC,SAAV,CAAqBC,OAAD,IAAa,CAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OArBD;AAsBD;AACF,GA3CQ,CAAT;AA4CA,sBACE,QAAC,KAAD;AAAA,2BACE,QAAC,SAAD,oBAAelB,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,eAAeF,KAAf","sourcesContent":["import \"../styles/globals.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Store } from \"../store\";\nimport { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport { firebaseCloudMessaging } from \"../webPush\";\nimport firebase from \"firebase/app\";\nimport { getAllAnnouncement } from \"../helper\";\n\nfunction MyApp({ Component, pageProps }) {\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n    if (!user) {\n      Router.push(\"/login\");\n    }\n  }, []);\n\n  useEffect(() => {\n    setToken();\n    if (\"serviceWorker\" in navigator) {\n      navigator.serviceWorker.addEventListener(\"message\", (event) =>\n        console.log(\"event for the service worker\", event)\n      );\n    }\n    async function setToken() {\n      try {\n        const token = await firebaseCloudMessaging.init();\n        if (token) {\n          getMessage();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    function getMessage() {\n      const messaging = firebase.messaging();\n      console.log({ messaging });\n      messaging.onMessage((message) => {\n        // window.location.reload();\n        // const userData = JSON.parse(localStorage.getItem(\"user\"));\n        // getAllAnnouncement(userData)\n        //   .then((data) => {\n        //     console.log(data);\n        //     const newAnnouncement = data.filter((val) => {\n        //       return val.isRead === false;\n        //     });\n        //     console.log(newAnnouncement);\n        //     if (newAnnouncement.length > 0) {\n        //       localStorage.setItem(\"notif\", true);\n        //       console.log(\"yes notif\");\n        //     } else {\n        //       localStorage.setItem(\"notif\", true);\n        //       console.log(\"no notif\");\n        //     }\n        //   })\n        //   .catch((err) => {\n        //     console.log(err);\n        //   });\n      });\n    }\n  });\n  return (\n    <Store>\n      <Component {...pageProps} />\n    </Store>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport moment from \"moment\";\nimport styles from \"../styles/pages/Calendar.module.css\";\nimport { Stores } from \"../store\";\nimport Spinner from \"../components/Spinner\";\nimport BotNav from \"../components/BotNav\";\nimport Nav from \"../components/Nav\";\nimport Card from \"../components/Card\";\nimport Checkbox from \"../components/Checkbox\";\nimport { getDayProgram, getDayPromo, getMonthPromo, getMonthProgram } from \"../helper\";\nexport default function Calender() {\n  const {\n    state,\n    dispatch,\n    actions\n  } = useContext(Stores);\n  const {\n    0: focus,\n    1: setFocus\n  } = useState(\"Day\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: loadingPromo,\n    1: setLoadingPromo\n  } = useState(false);\n  const {\n    0: loadingProgram,\n    1: setLoadingProgram\n  } = useState(false);\n  const {\n    0: loadingMonthPromo,\n    1: setLoadingMonthPromo\n  } = useState(false);\n  const {\n    0: loadingMonthProgram,\n    1: setLoadingMonthProgram\n  } = useState(false);\n  const {\n    0: loadingWeekPromo0,\n    1: setLoadingWeekPromo0\n  } = useState(true);\n  const {\n    0: loadingWeekProgram0,\n    1: setLoadingWeekProgram0\n  } = useState(true);\n  const {\n    0: loadingWeekPromo1,\n    1: setLoadingWeekPromo1\n  } = useState(true);\n  const {\n    0: loadingWeekProgram1,\n    1: setLoadingWeekProgram1\n  } = useState(true);\n  const {\n    0: loadingWeekPromo2,\n    1: setLoadingWeekPromo2\n  } = useState(true);\n  const {\n    0: loadingWeekProgram2,\n    1: setLoadingWeekProgram2\n  } = useState(true);\n  const {\n    0: loadingWeekPromo3,\n    1: setLoadingWeekPromo3\n  } = useState(true);\n  const {\n    0: loadingWeekProgram3,\n    1: setLoadingWeekProgram3\n  } = useState(true);\n  const {\n    0: loadingWeekPromo4,\n    1: setLoadingWeekPromo4\n  } = useState(true);\n  const {\n    0: loadingWeekProgram4,\n    1: setLoadingWeekProgram4\n  } = useState(true);\n  const {\n    0: promo,\n    1: setPromo\n  } = useState(true);\n  const {\n    0: program,\n    1: setProgram\n  } = useState(true);\n  const {\n    0: promoList,\n    1: setPromoList\n  } = useState([]);\n  const {\n    0: promoListMonth,\n    1: setPromoListMonth\n  } = useState([]);\n  const {\n    0: promoList0,\n    1: setPromoList0\n  } = useState([]);\n  const {\n    0: promoList1,\n    1: setPromoList1\n  } = useState([]);\n  const {\n    0: promoList2,\n    1: setPromoList2\n  } = useState([]);\n  const {\n    0: promoList3,\n    1: setPromoList3\n  } = useState([]);\n  const {\n    0: promoList4,\n    1: setPromoList4\n  } = useState([]);\n  const {\n    0: programList,\n    1: setProgramList\n  } = useState([]);\n  const {\n    0: programListMonth,\n    1: setProgramListMonth\n  } = useState([]);\n  const {\n    0: programList0,\n    1: setProgramList0\n  } = useState([]);\n  const {\n    0: programList1,\n    1: setProgramList1\n  } = useState([]);\n  const {\n    0: programList2,\n    1: setProgramList2\n  } = useState([]);\n  const {\n    0: programList3,\n    1: setProgramList3\n  } = useState([]);\n  const {\n    0: programList4,\n    1: setProgramList4\n  } = useState([]);\n  const {\n    0: now,\n    1: setNow\n  } = useState(new Date());\n  var dayName = moment(now).format(\"dddd\");\n  var date = moment(now).format(\"D\");\n  var monthName = moment(now).format(\"MMMM\");\n  var year = moment(now).format(\"YYYY\");\n  useEffect(() => {\n    var date = moment(now).format(\"YYYY-MM-DD\");\n\n    if (focus == \"Day\") {\n      setLoadingProgram(true);\n      setLoadingPromo(true);\n      getDayProgram(date).then(data => {\n        setProgramList(data);\n        setLoadingProgram(false);\n        console.log(\"program\", data);\n      }).catch(err => {\n        console.log(err);\n      });\n      getDayPromo(date).then(data => {\n        setPromoList(data);\n        setLoadingPromo(false);\n        console.log(\"promo\", data);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (focus === \"Week\") {\n      setLoadingWeekProgram0(true);\n      setLoadingWeekProgram1(true);\n      setLoadingWeekProgram2(true);\n      setLoadingWeekProgram3(true);\n      setLoadingWeekProgram4(true);\n      setLoadingWeekPromo0(true);\n      setLoadingWeekPromo1(true);\n      setLoadingWeekPromo2(true);\n      setLoadingWeekPromo3(true);\n      setLoadingWeekPromo4(true);\n      const dateStart = moment(now).startOf(\"isoweek\");\n\n      for (let i = 0; i < 5; i++) {\n        const date = moment(dateStart).add(\"days\", i);\n        const dateParam = moment(date).format(\"YYYY-MM-DD\");\n\n        if (i === 0) {\n          getDayProgram(dateParam).then(data => {\n            setProgramList0(data);\n            setLoadingWeekProgram0(false); // console.log(\"program\", data);\n          }).catch(err => {\n            console.log(err);\n          });\n          getDayPromo(dateParam).then(data => {\n            setPromoList0(data);\n            setLoadingWeekPromo0(false); // console.log(\"promo\", data);\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n\n        if (i === 1) {\n          getDayProgram(dateParam).then(data => {\n            setProgramList1(data);\n            setLoadingWeekProgram1(false); // console.log(\"program\", data);\n          }).catch(err => {\n            console.log(err);\n          });\n          getDayPromo(dateParam).then(data => {\n            setPromoList1(data);\n            setLoadingWeekPromo1(false); // console.log(\"promo\", data);\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n\n        if (i === 2) {\n          getDayProgram(dateParam).then(data => {\n            setProgramList2(data);\n            setLoadingWeekProgram2(false); // console.log(\"program\", data);\n          }).catch(err => {\n            console.log(err);\n          });\n          getDayPromo(dateParam).then(data => {\n            setPromoList2(data);\n            setLoadingWeekPromo2(false); // console.log(\"promo\", data);\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n\n        if (i === 3) {\n          getDayProgram(dateParam).then(data => {\n            setProgramList3(data);\n            setLoadingWeekProgram3(false); // console.log(\"program\", data);\n          }).catch(err => {\n            console.log(err);\n          });\n          getDayPromo(dateParam).then(data => {\n            setPromoList3(data);\n            setLoadingWeekPromo3(false); // console.log(\"promo\", data);\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n\n        if (i === 4) {\n          getDayProgram(dateParam).then(data => {\n            setProgramList4(data);\n            setLoadingWeekProgram4(false); // console.log(\"program\", data);\n          }).catch(err => {\n            console.log(err);\n          });\n          getDayPromo(dateParam).then(data => {\n            setPromoList4(data);\n            setLoadingWeekPromo4(false); // console.log(\"promo\", data);\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      }\n    } else if (focus === \"Month\") {\n      setLoadingMonthPromo(true);\n      setLoadingMonthProgram(true);\n      getMonthProgram(date).then(data => {\n        setProgramListMonth(data);\n        setLoadingMonthProgram(false);\n      }).catch(err => {\n        console.log(err);\n      });\n      getMonthPromo(date).then(data => {\n        setPromoListMonth(data);\n        setLoadingMonthPromo(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [now, focus]);\n\n  const renderTopMenu = () => {\n    const menu = [\"Day\", \"Week\", \"Month\"];\n    return menu.map((val, index) => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        onClick: () => {\n          setFocus(val);\n          setNow(new Date());\n        },\n        className: focus === val ? styles.menu_active : styles.menu_non_active,\n        children: val\n      }, index);\n    });\n  };\n\n  const renderDayList = (type, data) => {\n    if (loadingProgram || loadingPromo) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: \"Loading...\"\n      });\n    } else {\n      if (data.length === 0) {\n        if (type === \"PROMO\") {\n          return /*#__PURE__*/_jsx(\"div\", {\n            children: \"No promo today\"\n          });\n        } else if (type === \"PROGRAM\") {\n          return /*#__PURE__*/_jsx(\"div\", {\n            children: \"No program today\"\n          });\n        }\n      } else {\n        return data.map(val => {\n          return /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              fontSize: \"14px\",\n              fontWeight: \"500\",\n              color: \"#5E5873\",\n              textAlign: \"left\",\n              margin: \"10px 0\"\n            },\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              style: {\n                display: \"grid\",\n                gridTemplateColumns: \"12% 88%\"\n              },\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                style: {\n                  width: \"20px\",\n                  height: \"20px\",\n                  backgroundColor: type === \"PROMO\" ? \"#d1e4e1\" : \"#FFF1CC\",\n                  borderRadius: \"20px\",\n                  padding: \"4px\"\n                },\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  style: {\n                    width: \"12px\",\n                    height: \"12px\",\n                    backgroundColor: type === \"PROMO\" ? \"#41867a\" : \"#feb800\",\n                    borderRadius: \"20px\"\n                  }\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  children: val.judul\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"300\"\n                  },\n                  children: val.deskripsi\n                })]\n              })]\n            })\n          });\n        });\n      }\n    }\n  };\n\n  const renderMenuDay = () => {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(Card, {\n        style: {\n          borderRadius: \"6px\",\n          marginTop: \"12px\"\n        },\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          style: {\n            padding: \"22px 0 0 22px\"\n          },\n          children: /*#__PURE__*/_jsx(\"span\", {\n            className: styles.day_promo_title,\n            children: \"Promo\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            padding: \"6px 20px\"\n          },\n          children: renderDayList(\"PROMO\", promoList)\n        })]\n      }), /*#__PURE__*/_jsxs(Card, {\n        style: {\n          borderRadius: \"6px\",\n          marginTop: \"12px\"\n        },\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          style: {\n            padding: \"22px 0 0 22px\"\n          },\n          children: /*#__PURE__*/_jsx(\"span\", {\n            className: styles.day_program_title,\n            children: \"Program\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            padding: \"6px 20px\"\n          },\n          children: renderDayList(\"PROGRAM\", programList)\n        })]\n      })]\n    });\n  };\n\n  const renderWeekList = (type, data) => {\n    return data.map(val => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          fontSize: \"14px\",\n          fontWeight: \"500\",\n          color: \"#5E5873\",\n          textAlign: \"left\",\n          margin: \"10px 0\"\n        },\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"10% 90%\"\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: \"20px\",\n              height: \"20px\",\n              borderRadius: \"20px\",\n              padding: \"4px\"\n            },\n            children: /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: \"12px\",\n                height: \"12px\",\n                backgroundColor: type === \"PROMO\" ? \"#41867a\" : \"#feb800\",\n                borderRadius: \"20px\"\n              }\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(\"div\", {\n              children: val.judul\n            })\n          })]\n        })\n      });\n    });\n  };\n\n  const renderMenuWeek = () => {\n    const arrWeek = [];\n    const dateStart = moment(now).startOf(\"isoweek\");\n\n    for (let i = 0; i < 5; i++) {\n      const date = moment(dateStart).add(\"days\", i);\n      arrWeek.push(date);\n    }\n\n    const renderList = (dataPromo, dataProgram) => {\n      const datalength = dataPromo.length + dataProgram.length;\n\n      if (datalength === 0) {\n        return /*#__PURE__*/_jsx(_Fragment, {\n          children: \"No promo or program today\"\n        });\n      } else {\n        return /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(_Fragment, {\n            children: promo ? /*#__PURE__*/_jsx(_Fragment, {\n              children: renderWeekList(\"PROMO\", dataPromo)\n            }) : \"\"\n          }), /*#__PURE__*/_jsx(_Fragment, {\n            children: program ? /*#__PURE__*/_jsx(_Fragment, {\n              children: renderWeekList(\"PROGRAM\", dataProgram)\n            }) : \"\"\n          })]\n        });\n      }\n    };\n\n    const renderArr = arrWeek.map((val, index) => {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.week_header_container,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            children: moment(val).format(\"MMMM D, YYYY\")\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: moment(val).format(\"dddd\")\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.week_main_container,\n          children: index === 0 ? loadingWeekProgram0 || loadingWeekPromo0 ? /*#__PURE__*/_jsx(\"div\", {\n            children: \"Loading...\"\n          }) : renderList(promoList0, programList0) : index === 1 ? loadingWeekProgram1 || loadingWeekPromo1 ? /*#__PURE__*/_jsx(\"div\", {\n            children: \"Loading...\"\n          }) : renderList(promoList1, programList1) : index === 2 ? loadingWeekProgram2 || loadingWeekPromo2 ? /*#__PURE__*/_jsx(\"div\", {\n            children: \"Loading...\"\n          }) : renderList(promoList2, programList2) : index === 3 ? loadingWeekProgram3 || loadingWeekPromo3 ? /*#__PURE__*/_jsx(\"div\", {\n            children: \"Loading...\"\n          }) : renderList(promoList3, programList3) : index === 4 ? loadingWeekProgram4 || loadingWeekPromo4 ? /*#__PURE__*/_jsx(\"div\", {\n            children: \"Loading...\"\n          }) : renderList(promoList4, programList4) : /*#__PURE__*/_jsx(_Fragment, {})\n        })]\n      }, index);\n    });\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.month_header_container,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          onClick: () => {\n            setNow(moment(now).subtract(1, \"weeks\"));\n          },\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/prev_white.svg\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [moment(dateStart).format(\"D\"), \"-\", moment(dateStart).add(4, \"days\").format(\"D\"), \" \", moment(dateStart).add(4, \"days\").format(\"MMMM\"), /*#__PURE__*/_jsxs(\"span\", {\n            style: {\n              fontWeight: \"300\"\n            },\n            children: [\" \", moment(now).format(\"YYYY\")]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          onClick: () => {\n            setNow(moment(now).add(1, \"weeks\"));\n          },\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/next_white.svg\"\n          })\n        })]\n      }), renderArr]\n    });\n  };\n\n  const renderMonthList = () => {\n    const monthProgram = programListMonth.map(val => {\n      return {\n        createdBy: val.createdBy,\n        createdDate: val.createdDate,\n        deskripsi: val.deskripsi,\n        id: val.id,\n        isDeleted: val.isDeleted,\n        judul: val.judul,\n        kodeCabang: val.kodeCabang,\n        kodeProduk: val.kodeProduk,\n        namaCabang: val.namaCabang,\n        namaProduk: val.namaProduk,\n        nomorDokumen: val.nomorDokumen,\n        tanggalMulai: val.tanggalMulai,\n        tanggalSelesai: val.tanggalSelesai,\n        updatedBy: val.updatedBy,\n        updatedDate: val.updatedDate,\n        type: \"PROGRAM\"\n      };\n    });\n    const monthPromo = promoListMonth.map(val => {\n      return {\n        createdBy: val.createdBy,\n        createdDate: val.createdDate,\n        deskripsi: val.deskripsi,\n        id: val.id,\n        isDeleted: val.isDeleted,\n        judul: val.judul,\n        kodeCabang: val.kodeCabang,\n        kodeProduk: val.kodeProduk,\n        namaCabang: val.namaCabang,\n        namaProduk: val.namaProduk,\n        nomorDokumen: val.nomorDokumen,\n        tanggalMulai: val.tanggalMulai,\n        tanggalSelesai: val.tanggalSelesai,\n        updatedBy: val.updatedBy,\n        updatedDate: val.updatedDate,\n        type: \"PROMO\"\n      };\n    });\n    var dataRender = monthProgram.concat(monthPromo);\n    var dataRenderSort = dataRender.sort((a, b) => moment(a.tanggalMulai) - moment(b.tanggalMulai));\n\n    if (loadingMonthProgram || loadingMonthPromo) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: styles.week_main_container,\n        children: \"Loading...\"\n      });\n    } else {\n      if (dataRenderSort.length === 0) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: styles.week_main_container,\n          children: \"No promo or program this month\"\n        });\n      } else {\n        return dataRenderSort.map(val => {\n          if (val.type === \"PROMO\") {\n            return /*#__PURE__*/_jsx(_Fragment, {\n              children: /*#__PURE__*/_jsx(_Fragment, {\n                children: promo ? /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.month_container,\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    className: styles.month_promo_date,\n                    children: moment(val.tanggalMulai).format(\"D\")\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    children: [/*#__PURE__*/_jsx(\"div\", {\n                      children: val.judul\n                    }), /*#__PURE__*/_jsx(\"div\", {\n                      style: {\n                        fontSize: \"12px\"\n                      },\n                      children: val.deskripsi\n                    })]\n                  })]\n                }) : \"\"\n              })\n            });\n          } else if (val.type === \"PROGRAM\") {\n            return /*#__PURE__*/_jsx(_Fragment, {\n              children: program ? /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.month_container,\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.month_program_date,\n                  children: moment(val.tanggalMulai).format(\"D\")\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    children: val.judul\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    style: {\n                      fontSize: \"12px\"\n                    },\n                    children: val.deskripsi\n                  })]\n                })]\n              }) : \"\"\n            });\n          }\n        });\n      }\n    }\n  };\n\n  const renderMenuMonth = () => {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.month_header_container,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          onClick: () => {\n            setNow(moment(now).subtract(1, \"months\"));\n          },\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/prev_white.svg\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [moment(now).format(\"MMMM\"), /*#__PURE__*/_jsxs(\"span\", {\n            style: {\n              fontWeight: \"300\"\n            },\n            children: [\" \", moment(now).format(\"YYYY\")]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          onClick: () => {\n            setNow(moment(now).add(1, \"months\"));\n          },\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/next_white.svg\"\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.month_main_container,\n        children: renderMonthList()\n      })]\n    });\n  };\n\n  const togglePromo = () => {\n    setPromo(!promo);\n  };\n\n  const toggleProgram = () => {\n    setProgram(!program);\n  };\n\n  const renderPage = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsx(Spinner, {});\n    } else return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsxs(Head, {\n        children: [/*#__PURE__*/_jsx(\"title\", {\n          children: \"Home\"\n        }), /*#__PURE__*/_jsx(\"link\", {\n          rel: \"icon\",\n          href: \"/favicon.ico\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.wrapper,\n          children: [/*#__PURE__*/_jsx(Nav, {\n            title: \"Calendar\",\n            color: \"white\",\n            noBack: true\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.main,\n            children: [/*#__PURE__*/_jsxs(Card, {\n              style: {\n                borderRadius: \"6px\"\n              },\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.menu_grid,\n                children: renderTopMenu()\n              }), focus === \"Day\" ? /*#__PURE__*/_jsxs(_Fragment, {\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.day_title,\n                  children: dayName\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.day_grid,\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    onClick: () => {\n                      setNow(moment(now).subtract(1, \"days\"));\n                    },\n                    children: /*#__PURE__*/_jsx(\"img\", {\n                      src: \"/cev_left.svg\"\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    children: /*#__PURE__*/_jsx(\"div\", {\n                      className: styles.day_date_display,\n                      children: date\n                    })\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    onClick: () => {\n                      setNow(moment(now).add(1, \"days\"));\n                    },\n                    children: /*#__PURE__*/_jsx(\"img\", {\n                      src: \"/cev_right.svg\"\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.day_bot_display,\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    children: monthName\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    children: year\n                  })]\n                })]\n              }) : /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.filter_container,\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.filter_text,\n                  children: \"FILTER\"\n                }), /*#__PURE__*/_jsx(Checkbox, {\n                  text: \"Promo\",\n                  checked: promo,\n                  color: \"green\",\n                  onClick: () => togglePromo()\n                }), /*#__PURE__*/_jsx(Checkbox, {\n                  text: \"Program\",\n                  checked: program,\n                  color: \"yellow\",\n                  onClick: () => toggleProgram()\n                })]\n              })]\n            }), focus === \"Day\" ? renderMenuDay() : focus === \"Week\" ? renderMenuWeek() : focus === \"Month\" ? renderMenuMonth() : \"\"]\n          })]\n        })\n      }), /*#__PURE__*/_jsx(BotNav, {})]\n    });\n  };\n\n  return renderPage();\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Rico\\\\Desktop\\\\Home\\\\Kalbe app\\\\sakamor-new\\\\pages\\\\announcement.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styles from \"../styles/pages/Announcement.module.css\";\nimport Nav from \"../components/Nav\";\nimport { Stores } from \"../store\";\nimport BotNav from \"../components/BotNav\";\nimport { getAllAnnouncement } from \"../helper\";\nimport moment from \"moment\";\nexport default function Announcement() {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(Stores),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch,\n      actions = _useContext.actions;\n\n  var _useState = useState([]),\n      announcementList = _useState[0],\n      setAnnouncementList = _useState[1];\n\n  useEffect(function () {\n    getAllAnnouncement().then(function (data) {\n      setAnnouncementList(data);\n      console.log(data);\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }, [dispatch]);\n\n  var renderAnnouncement = function renderAnnouncement() {\n    return announcementList.map(function (val) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.announcement_container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.announcement_circle,\n          children: moment(val.tanggalMulai).format(\"D\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: val.judul\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"12px\"\n            },\n            children: val.createdDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        title: \"Announcement\",\n        color: \"white\",\n        backHref: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.main,\n        children: renderAnnouncement()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Announcement, \"siZ15mPW22jyenlwRWR+i4UUTC4=\");\n\n_c = Announcement;\n\nvar _c;\n\n$RefreshReg$(_c, \"Announcement\");","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/pages/announcement.jsx"],"names":["React","useState","useEffect","useContext","styles","Nav","Stores","BotNav","getAllAnnouncement","moment","Announcement","state","dispatch","actions","announcementList","setAnnouncementList","then","data","console","log","err","renderAnnouncement","map","val","announcement_container","announcement_circle","tanggalMulai","format","judul","fontSize","createdDate","wrapper","main"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAAA;;AAAA,oBACAP,UAAU,CAACG,MAAD,CADV;AAAA,MAC7BK,KAD6B,eAC7BA,KAD6B;AAAA,MACtBC,QADsB,eACtBA,QADsB;AAAA,MACZC,OADY,eACZA,OADY;;AAAA,kBAEWZ,QAAQ,CAAC,EAAD,CAFnB;AAAA,MAE9Ba,gBAF8B;AAAA,MAEZC,mBAFY;;AAIrCb,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,kBAAkB,GACfQ,IADH,CACQ,UAACC,IAAD,EAAU;AACdF,MAAAA,mBAAmB,CAACE,IAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAJH,WAKS,UAACG,GAAD,EAAS;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,CAACR,QAAD,CATM,CAAT;;AAWA,MAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,WAAOP,gBAAgB,CAACQ,GAAjB,CAAqB,UAACC,GAAD,EAAS;AACnC,0BACE;AAAK,QAAA,SAAS,EAAEnB,MAAM,CAACoB,sBAAvB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEpB,MAAM,CAACqB,mBAAvB;AAAA,oBACGhB,MAAM,CAACc,GAAG,CAACG,YAAL,CAAN,CAAyBC,MAAzB,CAAgC,GAAhC;AADH;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AAAA,kCACE;AAAA,sBAAMJ,GAAG,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aAAZ;AAAA,sBAAmCN,GAAG,CAACO;AAAvC;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAWD,KAZM,CAAP;AAaD,GAdD;;AAgBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,OAAvB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE,cAAZ;AAA4B,QAAA,KAAK,EAAE,OAAnC;AAA4C,QAAA,QAAQ,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAE3B,MAAM,CAAC4B,IAAvB;AAAA,kBAA8BX,kBAAkB;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;;GAxCuBX,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport styles from \"../styles/pages/Announcement.module.css\";\r\nimport Nav from \"../components/Nav\";\r\nimport { Stores } from \"../store\";\r\nimport BotNav from \"../components/BotNav\";\r\nimport { getAllAnnouncement } from \"../helper\";\r\nimport moment from \"moment\";\r\nexport default function Announcement() {\r\n  const { state, dispatch, actions } = useContext(Stores);\r\n  const [announcementList, setAnnouncementList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllAnnouncement()\r\n      .then((data) => {\r\n        setAnnouncementList(data);\r\n        console.log(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const renderAnnouncement = () => {\r\n    return announcementList.map((val) => {\r\n      return (\r\n        <div className={styles.announcement_container}>\r\n          <div className={styles.announcement_circle}>\r\n            {moment(val.tanggalMulai).format(\"D\")}\r\n          </div>\r\n          <div>\r\n            <div>{val.judul}</div>\r\n            <div style={{ fontSize: \"12px\" }}>{val.createdDate}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper}>\r\n        <Nav title={\"Announcement\"} color={\"white\"} backHref={\"/\"} />\r\n        <div className={styles.main}>{renderAnnouncement()}</div>\r\n        <div></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
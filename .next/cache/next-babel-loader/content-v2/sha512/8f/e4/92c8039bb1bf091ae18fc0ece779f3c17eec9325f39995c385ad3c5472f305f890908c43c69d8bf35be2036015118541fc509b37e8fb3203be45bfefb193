{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from \"next/head\";\nimport styles from \"../styles/pages/Login.module.css\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport Button from \"../components/Button\";\nimport { Stores } from \"../store\";\nimport Router from \"next/router\";\nimport { onLogin } from \"../helper\";\nexport default function Login() {\n  const {\n    state,\n    dispatch,\n    actions\n  } = useContext(Stores);\n  const {\n    0: passVisibility,\n    1: setPassVisibility\n  } = useState(true);\n  const {\n    0: wrongUser,\n    1: setWrongUser\n  } = useState(false);\n\n  const toggleVisibility = () => {\n    setPassVisibility(!passVisibility);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"user\")) {\n      return Router.push(\"/\");\n    }\n  });\n\n  const onLoginClick = values => {\n    onLogin(values).then(data => {\n      if (data.status === 404) {\n        setWrongUser(true);\n        console.log(data);\n      } else {\n        setWrongUser(false);\n        console.log(data);\n        actions.userLogin(data);\n        window.location.reload();\n      }\n    }).catch(err => {\n      console.log(err);\n      setWrongUser(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Login\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.middle,\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        className: styles.img_security,\n        src: \"/security.svg\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.border_content,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.main_text,\n          children: \"SAKA ARMOR\"\n        }), wrongUser ? /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Wrong password or username!\"\n        }) : \"\", /*#__PURE__*/_jsx(Formik, {\n          initialValues: {\n            username: \"\",\n            password: \"\"\n          },\n          onSubmit: async values => {\n            if (values.username !== \"\" && values.password !== \"\") {\n              onLoginClick(values);\n            } else {\n              setWrongUser(true);\n            }\n          },\n          children: /*#__PURE__*/_jsxs(Form, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.input_text,\n              children: \"Username\"\n            }), /*#__PURE__*/_jsx(Field, {\n              className: styles.input,\n              id: \"username\",\n              name: \"username\",\n              placeholder: \"Employee ID\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.input_text,\n              children: \"Password\"\n            }), /*#__PURE__*/_jsx(Field, {\n              className: styles.input,\n              id: \"password\",\n              name: \"password\",\n              type: passVisibility ? \"password\" : null,\n              placeholder: \"Password\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.button_container,\n              children: /*#__PURE__*/_jsx(Button, {\n                submit: true,\n                text: \"Log In\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.forgot_pass,\n              children: \"Forgot Password?\"\n            })]\n          })\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
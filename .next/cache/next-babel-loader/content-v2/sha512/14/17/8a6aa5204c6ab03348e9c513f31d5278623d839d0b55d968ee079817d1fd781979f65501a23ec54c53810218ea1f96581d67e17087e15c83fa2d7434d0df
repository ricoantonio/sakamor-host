{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import AsyncStorage from '@react-native-async-storage/async-storage';\nconst defaultTrack = {\n  track: [],\n  sort: [],\n  sortToggle: false\n};\n\nconst setData = async x => {\n  try {\n    const trackSave = JSON.stringify(x); // await AsyncStorage.setItem('track', trackSave);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst trackReducer = (state, action) => {\n  const track = state.track;\n  const sort = state.sort;\n  const sortToggle = state.sortToggle;\n\n  switch (action.type) {\n    case \"SORT_TOGGLE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sortToggle: !sortToggle,\n        sort: []\n      });\n\n    case \"SORT_OFF\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sortToggle: false,\n        sort: []\n      });\n\n    case \"SET_TRACK\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        track: [...action.payload]\n      });\n\n    case \"ADD_TRACK\":\n      if (track.includes(action.payload)) {} else {\n        track.push(action.payload);\n        setData(track);\n      }\n\n      return state;\n\n    case \"REMOVE_TRACK\":\n      var newTrack = track.filter(a => {\n        return a.event !== action.payload.event;\n      });\n      setData(newTrack);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        track: [...newTrack]\n      });\n\n    case \"ADD_SORT\":\n      if (sort.includes(action.payload)) {} else {\n        sort.push(action.payload);\n      }\n\n      return state;\n\n    case \"REMOVE_SORT\":\n      var newSort = sort.filter(a => {\n        return a.event !== action.payload.event;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sort: [...newSort]\n      });\n\n    case \"SORT_TRACK\":\n      setData(sort);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        track: [...sort],\n        sortToggle: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport { trackReducer, defaultTrack };","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/store/reducers/track.js"],"names":["defaultTrack","track","sort","sortToggle","setData","x","trackSave","JSON","stringify","e","console","log","trackReducer","state","action","type","payload","includes","push","newTrack","filter","a","event","newSort"],"mappings":";;;;;;AAAA;AAEA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;;AAMA,MAAMC,OAAO,GAAG,MAAOC,CAAP,IAAa;AAC3B,MAAI;AACF,UAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeH,CAAf,CAAlB,CADE,CAEF;AACD,GAHD,CAGE,OAAOI,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CAPD;;AASA,MAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,QAAMb,KAAK,GAAGY,KAAK,CAACZ,KAApB;AACA,QAAMC,IAAI,GAAGW,KAAK,CAACX,IAAnB;AACA,QAAMC,UAAU,GAAGU,KAAK,CAACV,UAAzB;;AAEA,UAAQW,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,6CAAYF,KAAZ;AAAmBV,QAAAA,UAAU,EAAE,CAACA,UAAhC;AAA4CD,QAAAA,IAAI,EAAE;AAAlD;;AAEF,SAAK,UAAL;AACE,6CAAYW,KAAZ;AAAmBV,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,IAAI,EAAE;AAA5C;;AAEF,SAAK,WAAL;AACE,6CAAYW,KAAZ;AAAmBZ,QAAAA,KAAK,EAAE,CAAC,GAAGa,MAAM,CAACE,OAAX;AAA1B;;AAEF,SAAK,WAAL;AACE,UAAIf,KAAK,CAACgB,QAAN,CAAeH,MAAM,CAACE,OAAtB,CAAJ,EAAoC,CACnC,CADD,MACO;AACLf,QAAAA,KAAK,CAACiB,IAAN,CAAWJ,MAAM,CAACE,OAAlB;AACAZ,QAAAA,OAAO,CAACH,KAAD,CAAP;AACD;;AACD,aAAOY,KAAP;;AAEF,SAAK,cAAL;AACE,UAAIM,QAAQ,GAAGlB,KAAK,CAACmB,MAAN,CAAcC,CAAD,IAAO;AACjC,eAAOA,CAAC,CAACC,KAAF,KAAYR,MAAM,CAACE,OAAP,CAAeM,KAAlC;AACD,OAFc,CAAf;AAGAlB,MAAAA,OAAO,CAACe,QAAD,CAAP;AACA,6CAAYN,KAAZ;AAAmBZ,QAAAA,KAAK,EAAE,CAAC,GAAGkB,QAAJ;AAA1B;;AAEF,SAAK,UAAL;AACE,UAAIjB,IAAI,CAACe,QAAL,CAAcH,MAAM,CAACE,OAArB,CAAJ,EAAmC,CAClC,CADD,MACO;AACLd,QAAAA,IAAI,CAACgB,IAAL,CAAUJ,MAAM,CAACE,OAAjB;AACD;;AACD,aAAOH,KAAP;;AAEF,SAAK,aAAL;AACE,UAAIU,OAAO,GAAGrB,IAAI,CAACkB,MAAL,CAAaC,CAAD,IAAO;AAC/B,eAAOA,CAAC,CAACC,KAAF,KAAYR,MAAM,CAACE,OAAP,CAAeM,KAAlC;AACD,OAFa,CAAd;AAGA,6CAAYT,KAAZ;AAAmBX,QAAAA,IAAI,EAAE,CAAC,GAAGqB,OAAJ;AAAzB;;AAEF,SAAK,YAAL;AACEnB,MAAAA,OAAO,CAACF,IAAD,CAAP;AACA,6CAAYW,KAAZ;AAAmBZ,QAAAA,KAAK,EAAE,CAAC,GAAGC,IAAJ,CAA1B;AAAqCC,QAAAA,UAAU,EAAE;AAAjD;;AAEF;AACE,aAAOU,KAAP;AA3CJ;AA6CD,CAlDD;;AAoDA,SAASD,YAAT,EAAuBZ,YAAvB","sourcesContent":["// import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst defaultTrack = {\r\n  track: [],\r\n  sort: [],\r\n  sortToggle: false,\r\n};\r\n\r\nconst setData = async (x) => {\r\n  try {\r\n    const trackSave = JSON.stringify(x);\r\n    // await AsyncStorage.setItem('track', trackSave);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst trackReducer = (state, action) => {\r\n  const track = state.track;\r\n  const sort = state.sort;\r\n  const sortToggle = state.sortToggle;\r\n\r\n  switch (action.type) {\r\n    case \"SORT_TOGGLE\":\r\n      return { ...state, sortToggle: !sortToggle, sort: [] };\r\n\r\n    case \"SORT_OFF\":\r\n      return { ...state, sortToggle: false, sort: [] };\r\n\r\n    case \"SET_TRACK\":\r\n      return { ...state, track: [...action.payload] };\r\n\r\n    case \"ADD_TRACK\":\r\n      if (track.includes(action.payload)) {\r\n      } else {\r\n        track.push(action.payload);\r\n        setData(track);\r\n      }\r\n      return state;\r\n\r\n    case \"REMOVE_TRACK\":\r\n      var newTrack = track.filter((a) => {\r\n        return a.event !== action.payload.event;\r\n      });\r\n      setData(newTrack);\r\n      return { ...state, track: [...newTrack] };\r\n\r\n    case \"ADD_SORT\":\r\n      if (sort.includes(action.payload)) {\r\n      } else {\r\n        sort.push(action.payload);\r\n      }\r\n      return state;\r\n\r\n    case \"REMOVE_SORT\":\r\n      var newSort = sort.filter((a) => {\r\n        return a.event !== action.payload.event;\r\n      });\r\n      return { ...state, sort: [...newSort] };\r\n\r\n    case \"SORT_TRACK\":\r\n      setData(sort);\r\n      return { ...state, track: [...sort], sortToggle: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { trackReducer, defaultTrack };\r\n"]},"metadata":{},"sourceType":"module"}
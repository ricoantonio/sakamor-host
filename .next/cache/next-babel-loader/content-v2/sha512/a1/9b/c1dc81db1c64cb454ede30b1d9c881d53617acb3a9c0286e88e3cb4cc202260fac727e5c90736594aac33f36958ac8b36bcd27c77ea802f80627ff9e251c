{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Rico\\\\Desktop\\\\Home\\\\Kalbe app\\\\sakamor-new\\\\views\\\\ui-elements\\\\cards\\\\statistics\\\\ProfitLineChart.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport dynamic from \"next/dynamic\";\nvar TinyChartStats = dynamic(_c = function _c() {\n  return import(\"../../../../core/components/widgets/stats/TinyChartStats\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../../../../core/components/widgets/stats/TinyChartStats\")];\n    },\n    modules: [\"../../../../core/components/widgets/stats/TinyChartStats\"]\n  }\n});\n_c2 = TinyChartStats;\n\nvar ProfitLineChart = function ProfitLineChart(_ref) {\n  _s();\n\n  var info = _ref.info;\n\n  var _useState = useState(null),\n      data = _useState[0],\n      setData = _useState[1];\n\n  debugger;\n  useEffect(function () {\n    axios.get(\"/card/card-statistics/profit-line-chart\").then(function (res) {\n      return setData(res.data);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, []);\n  debugger;\n  var options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: \"#EBEBEB\",\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [{\n      data: [0, 20, 5, 30, 15, 45]\n    }],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [{\n        seriesIndex: 0,\n        dataPointIndex: 5,\n        fillColor: \"#ffffff\",\n        strokeColor: info,\n        size: 5\n      }],\n      shape: \"circle\",\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: \"0px\"\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  };\n  return data !== null ? /*#__PURE__*/_jsxDEV(TinyChartStats, {\n    height: 70,\n    type: \"line\",\n    options: options,\n    title: \"123\",\n    stats: \"1\",\n    series: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, _this) : null;\n};\n\n_s(ProfitLineChart, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c3 = ProfitLineChart;\nexport default ProfitLineChart;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TinyChartStats$dynamic\");\n$RefreshReg$(_c2, \"TinyChartStats\");\n$RefreshReg$(_c3, \"ProfitLineChart\");","map":{"version":3,"sources":["C:/Users/Rico/Desktop/Home/Kalbe app/sakamor-new/views/ui-elements/cards/statistics/ProfitLineChart.js"],"names":["useEffect","useState","axios","dynamic","TinyChartStats","ssr","ProfitLineChart","info","data","setData","get","then","res","err","console","log","options","chart","toolbar","show","zoom","enabled","grid","borderColor","strokeDashArray","xaxis","lines","yaxis","padding","top","bottom","stroke","width","colors","series","markers","size","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","labels","style","fontSize","axisBorder","axisTicks","tooltip","x"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport dynamic from \"next/dynamic\";\nconst TinyChartStats = dynamic(\n  () => import(\"../../../../core/components/widgets/stats/TinyChartStats\"),\n  { ssr: false }\n);\n\nconst ProfitLineChart = ({ info }) => {\n  const [data, setData] = useState(null);\n\n  debugger;\n\n  useEffect(() => {\n    axios\n      .get(\"/card/card-statistics/profit-line-chart\")\n      .then((res) => setData(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  debugger;\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false,\n      },\n      zoom: {\n        enabled: false,\n      },\n    },\n    grid: {\n      borderColor: \"#EBEBEB\",\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true,\n        },\n      },\n      yaxis: {\n        lines: {\n          show: false,\n        },\n      },\n      padding: {\n        top: -30,\n        bottom: -10,\n      },\n    },\n    stroke: {\n      width: 3,\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45],\n      },\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: \"#ffffff\",\n          strokeColor: info,\n          size: 5,\n        },\n      ],\n      shape: \"circle\",\n      radius: 2,\n      hover: {\n        size: 3,\n      },\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: \"0px\",\n        },\n      },\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    yaxis: {\n      show: false,\n    },\n    tooltip: {\n      x: {\n        show: false,\n      },\n    },\n  };\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type=\"line\"\n      options={options}\n      title=\"123\"\n      stats=\"1\"\n      series=\"1\"\n    />\n  ) : null;\n};\n\nexport default ProfitLineChart;\n"]},"metadata":{},"sourceType":"module"}
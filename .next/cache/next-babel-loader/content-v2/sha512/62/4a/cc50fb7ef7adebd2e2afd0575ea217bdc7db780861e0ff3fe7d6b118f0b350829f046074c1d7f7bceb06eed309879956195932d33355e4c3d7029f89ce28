{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../styles/globals.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Store } from \"../store\";\nimport { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport { firebaseCloudMessaging } from \"../webpush\";\nimport firebase from \"firebase/app\";\nimport { getAllAnnouncement } from \"../helper\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  useEffect(() => {\n    const user = localStorage.getItem(\"user\");\n\n    if (!user) {\n      Router.push(\"/login\");\n    }\n  }, []);\n  useEffect(() => {\n    setToken();\n\n    async function setToken() {\n      try {\n        const token = await firebaseCloudMessaging.init();\n\n        if (token) {\n          getMessage();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    function getMessage() {\n      const messaging = firebase.messaging();\n      console.log({\n        messaging\n      });\n      messaging.onMessage(message => {// localStorage.setItem(\"notif\", true);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsx(Store, {\n    children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n  });\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}